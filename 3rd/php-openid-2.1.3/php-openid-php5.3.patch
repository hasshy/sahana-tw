diff -NaurB Auth/OpenID/Association.php Auth/OpenID/Association.php
--- Auth/OpenID/Association.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/Association.php	2009-12-03 11:39:00.000000000 +0100
@@ -94,7 +94,7 @@
      * @return association An {@link Auth_OpenID_Association}
      * instance.
      */
-    function fromExpiresIn($expires_in, $handle, $secret, $assoc_type)
+    static function fromExpiresIn($expires_in, $handle, $secret, $assoc_type)
     {
         $issued = time();
         $lifetime = $expires_in;
@@ -206,7 +206,7 @@
      * @param string $assoc_s Association as serialized by serialize()
      * @return Auth_OpenID_Association $result instance of this class
      */
-    function deserialize($class_name, $assoc_s)
+    static function deserialize($class_name, $assoc_s)
     {
         $pairs = Auth_OpenID_KVForm::toArray($assoc_s, $strict = true);
         $keys = array();
@@ -327,7 +327,7 @@
      *
      * @access private
      */
-    function _makePairs(&$message)
+    function _makePairs($message)
     {
         $signed = $message->getArg(Auth_OpenID_OPENID_NS, 'signed');
         if (!$signed || Auth_OpenID::isFailure($signed)) {
@@ -352,7 +352,7 @@
      *
      * @access private
      */
-    function getMessageSignature(&$message)
+    function getMessageSignature($message)
     {
         $pairs = $this->_makePairs($message);
         return base64_encode($this->sign($pairs));
@@ -364,7 +364,7 @@
      *
      * @access private
      */
-    function checkMessageSignature(&$message)
+    function checkMessageSignature($message)
     {
         $sig = $message->getArg(Auth_OpenID_OPENID_NS,
                                 'sig');
@@ -469,18 +469,16 @@
     return $result;
 }
 
-function &Auth_OpenID_getDefaultNegotiator()
+function Auth_OpenID_getDefaultNegotiator()
 {
-    $x = new Auth_OpenID_SessionNegotiator(
+    return new Auth_OpenID_SessionNegotiator(
                  Auth_OpenID_getDefaultAssociationOrder());
-    return $x;
 }
 
-function &Auth_OpenID_getEncryptedNegotiator()
+function Auth_OpenID_getEncryptedNegotiator()
 {
-    $x = new Auth_OpenID_SessionNegotiator(
+    return new Auth_OpenID_SessionNegotiator(
                  Auth_OpenID_getOnlyEncryptedOrder());
-    return $x;
 }
 
 /**
@@ -610,4 +608,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/OpenID/AX.php Auth/OpenID/AX.php
--- Auth/OpenID/AX.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/AX.php	2009-12-03 11:43:23.000000000 +0100
@@ -38,7 +38,7 @@
      * @return bool true if $thing is an Auth_OpenID_AX_Error; false
      * if not.
      */
-    function isError($thing)
+    static function isError($thing)
     {
         return is_a($thing, 'Auth_OpenID_AX_Error');
     }
@@ -191,7 +191,7 @@
      * Construct an attribute information object.  For parameter
      * details, see the constructor.
      */
-    function make($type_uri, $count=1, $required=false,
+    static function make($type_uri, $count=1, $required=false,
                   $alias=null)
     {
         if ($alias !== null) {
@@ -235,7 +235,7 @@
  * return null If an alias is present in the list of aliases but
  * is not present in the namespace map.
  */
-function Auth_OpenID_AX_toTypeURIs(&$namespace_map, $alias_list_s)
+function Auth_OpenID_AX_toTypeURIs($namespace_map, $alias_list_s)
 {
     $uris = array();
 
@@ -386,7 +386,7 @@
      * Auth_OpenID_AX_FetchRequest extracted from the request message if
      * successful
      */
-    function &fromOpenIDRequest($request)
+    static function fromOpenIDRequest($request)
     {
         $m = $request->message;
         $obj = new Auth_OpenID_AX_FetchRequest();
@@ -484,7 +484,7 @@
                          Auth_OpenID::arrayGet($ax_args, 'required'));
 
         foreach ($required as $type_uri) {
-            $attrib =& $this->requested_attributes[$type_uri];
+            $attrib = $this->requested_attributes[$type_uri];
             $attrib->required = true;
         }
 
@@ -587,7 +587,7 @@
      *
      * @access private
      */
-    function _getExtensionKVArgs(&$aliases)
+    function _getExtensionKVArgs($aliases)
     {
         if ($aliases === null) {
             $aliases = new Auth_OpenID_NamespaceMap();
@@ -888,7 +888,7 @@
             $ax_args['update_url'] = $update_url;
         }
 
-        Auth_OpenID::update(&$ax_args, $kv_args);
+        Auth_OpenID::update($ax_args, $kv_args);
 
         return $ax_args;
     }
@@ -922,7 +922,7 @@
      * @return $response A FetchResponse containing the data from the
      * OpenID message
      */
-    function fromSuccessResponse($success_response, $signed=true)
+    static function fromSuccessResponse($success_response, $signed=true)
     {
         $obj = new Auth_OpenID_AX_FetchResponse();
         if ($signed) {
@@ -960,7 +960,7 @@
     {
         $ax_args = $this->_newArgs();
         $kv_args = $this->_getExtensionKVArgs($aliases);
-        Auth_OpenID::update(&$ax_args, $kv_args);
+        Auth_OpenID::update($ax_args, $kv_args);
         return $ax_args;
     }
 }
@@ -980,7 +980,7 @@
      * Returns Auth_OpenID_AX_Error on error or an
      * Auth_OpenID_AX_StoreResponse object on success.
      */
-    function &make($succeeded=true, $error_message=null)
+    function make($succeeded=true, $error_message=null)
     {
         if (($succeeded) && ($error_message !== null)) {
             return new Auth_OpenID_AX_Error('An error message may only be '.
@@ -1020,4 +1020,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/OpenID/BigMath.php Auth/OpenID/BigMath.php
--- Auth/OpenID/BigMath.php	2009-12-02 18:04:08.000000000 +0100
+++ Auth/OpenID/BigMath.php	2009-12-03 10:01:41.000000000 +0100
@@ -351,8 +351,7 @@
                   'class' => 'Auth_OpenID_GmpMathWrapper');
     }
 
-    $result[] = array(
-                      'modules' => array('bcmath', 'php_bcmath'),
+    $result[] = array('modules' => array('bcmath', 'php_bcmath'),
                       'extension' => 'bcmath',
                       'class' => 'Auth_OpenID_BcMathWrapper');
 
@@ -364,33 +363,8 @@
  */
 function Auth_OpenID_detectMathLibrary($exts)
 {
-    $loaded = false;
-    
-    if (!function_exists('dl')) {
-      return false;
-    }
-    
     foreach ($exts as $extension) {
-        // See if the extension specified is already loaded.
-        if ($extension['extension'] &&
-            extension_loaded($extension['extension'])) {
-            $loaded = true;
-        }
-
-        // Try to load dynamic modules.
-        if (!$loaded) {
-            foreach ($extension['modules'] as $module) {
-                if (@dl($module . "." . PHP_SHLIB_SUFFIX)) {
-                    $loaded = true;
-                    break;
-                }
-            }
-        }
-
-        // If the load succeeded, supply an instance of
-        // Auth_OpenID_MathWrapper which wraps the specified
-        // module's functionality.
-        if ($loaded) {
+        if (extension_loaded($extension['extension'])) {
             return $extension;
         }
     }
@@ -409,7 +382,7 @@
  * instance of a wrapper for that extension module.  If no extension
  * module is found, an instance of {@link Auth_OpenID_MathWrapper} is
  * returned, which wraps the native PHP integer implementation.  The
- * proper calling convention for this method is $lib =&
+ * proper calling convention for this method is $lib =
  * Auth_OpenID_getMathLib().
  *
  * This function checks for the existence of specific long number
@@ -420,7 +393,7 @@
  *
  * @package OpenID
  */
-function &Auth_OpenID_getMathLib()
+function Auth_OpenID_getMathLib()
 {
     // The instance of Auth_OpenID_MathWrapper that we choose to
     // supply will be stored here, so that subseqent calls to this
diff -NaurB Auth/OpenID/Consumer.php Auth/OpenID/Consumer.php
--- Auth/OpenID/Consumer.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/Consumer.php	2009-12-03 12:00:22.000000000 +0100
@@ -258,19 +258,19 @@
      * when creating the internal consumer object.  This is used for
      * testing.
      */
-    function Auth_OpenID_Consumer(&$store, $session = null,
+    function Auth_OpenID_Consumer($store, $session = null,
                                   $consumer_cls = null)
     {
         if ($session === null) {
             $session = new Auth_Yadis_PHPSession();
         }
 
-        $this->session =& $session;
+        $this->session = $session;
 
         if ($consumer_cls !== null) {
-            $this->consumer =& new $consumer_cls($store);
+            $this->consumer = new $consumer_cls($store);
         } else {
-            $this->consumer =& new Auth_OpenID_GenericConsumer($store);
+            $this->consumer = new Auth_OpenID_GenericConsumer($store);
         }
 
         $this->_token_key = $this->session_key_prefix . $this->_token_suffix;
@@ -281,7 +281,7 @@
      *
      * @access private
      */
-    function getDiscoveryObject(&$session, $openid_url,
+    function getDiscoveryObject($session, $openid_url,
                                 $session_key_prefix)
     {
         return new Auth_Yadis_Discovery($session, $openid_url,
@@ -339,7 +339,7 @@
                                            $this->consumer->fetcher);
 
         // Reset the 'stale' attribute of the manager.
-        $m =& $disco->getManager();
+        $m = $disco->getManager();
         if ($m) {
             $m->stale = false;
             $disco->session->set($disco->session_key,
@@ -370,7 +370,7 @@
      * @return Auth_OpenID_AuthRequest $auth_request An OpenID
      * authentication request object.
      */
-    function &beginWithoutDiscovery($endpoint, $anonymous=false)
+    function beginWithoutDiscovery($endpoint, $anonymous=false)
     {
         $loader = new Auth_OpenID_ServiceEndpointLoader();
         $auth_req = $this->consumer->begin($endpoint);
@@ -467,7 +467,7 @@
 
     function getRequest()
     {
-        $math =& Auth_OpenID_getMathLib();
+        $math = Auth_OpenID_getMathLib();
 
         $cpub = $math->longToBase64($this->dh->public);
 
@@ -496,7 +496,7 @@
             return null;
         }
 
-        $math =& Auth_OpenID_getMathLib();
+        $math = Auth_OpenID_getMathLib();
 
         $spub = $math->base64ToLong($response->getArg(Auth_OpenID_OPENID_NS,
                                                       'dh_server_public'));
@@ -611,10 +611,10 @@
      * in the module description.  The default value is False, which
      * disables immediate mode.
      */
-    function Auth_OpenID_GenericConsumer(&$store)
+    function Auth_OpenID_GenericConsumer($store)
     {
-        $this->store =& $store;
-        $this->negotiator =& Auth_OpenID_getDefaultNegotiator();
+        $this->store = $store;
+        $this->negotiator = Auth_OpenID_getDefaultNegotiator();
         $this->_use_assocs = ($this->store ? true : false);
 
         $this->fetcher = Auth_Yadis_Yadis::getHTTPFetcher();
@@ -665,14 +665,14 @@
         $method = Auth_OpenID::arrayGet($mode_methods, $mode,
                                         '_completeInvalid');
 
-        return call_user_func_array(array(&$this, $method),
+        return call_user_func_array(array($this, $method),
                                     array($message, $endpoint, $return_to));
     }
 
     /**
      * @access private
      */
-    function _completeInvalid($message, &$endpoint, $unused)
+    function _completeInvalid($message, $endpoint, $unused)
     {
         $mode = $message->getArg(Auth_OpenID_OPENID_NS, 'mode',
                                  '<No mode set>');
@@ -684,7 +684,7 @@
     /**
      * @access private
      */
-    function _complete_cancel($message, &$endpoint, $unused)
+    function _complete_cancel($message, $endpoint, $unused)
     {
         return new Auth_OpenID_CancelResponse($endpoint);
     }
@@ -692,7 +692,7 @@
     /**
      * @access private
      */
-    function _complete_error($message, &$endpoint, $unused)
+    function _complete_error($message, $endpoint, $unused)
     {
         $error = $message->getArg(Auth_OpenID_OPENID_NS, 'error');
         $contact = $message->getArg(Auth_OpenID_OPENID_NS, 'contact');
@@ -705,7 +705,7 @@
     /**
      * @access private
      */
-    function _complete_setup_needed($message, &$endpoint, $unused)
+    function _complete_setup_needed($message, $endpoint, $unused)
     {
         if (!$message->isOpenID2()) {
             return $this->_completeInvalid($message, $endpoint);
@@ -719,7 +719,7 @@
     /**
      * @access private
      */
-    function _complete_id_res($message, &$endpoint, $return_to)
+    function _complete_id_res($message, $endpoint, $return_to)
     {
         $user_setup_url = $message->getArg(Auth_OpenID_OPENID1_NS,
                                            'user_setup_url');
@@ -1197,7 +1197,7 @@
      * @access private
      */
     function _verifyDiscoveryServices($claimed_id, 
-                                      &$services, &$to_match_endpoints)
+                                      $services, $to_match_endpoints)
     {
         // Search the services resulting from discovery to find one
         // that matches the information from the assertion
@@ -1397,7 +1397,7 @@
      *
      * @access private
      */
-    function _httpResponseToMessage($response, $server_url)
+    static function _httpResponseToMessage($response, $server_url)
     {
         // Should this function be named Message.fromHTTPResponse instead?
         $response_message = Auth_OpenID_Message::fromKVForm($response->body);
@@ -1461,7 +1461,7 @@
      *
      * @access private
      */
-    function _extractSupportedAssociationType(&$server_error, &$endpoint,
+    function _extractSupportedAssociationType($server_error, $endpoint,
                                               $assoc_type)
     {
         // Any error message whose code is not 'unsupported-type'
@@ -1566,7 +1566,7 @@
     /**
      * @access private
      */
-    function _extractAssociation(&$assoc_response, &$assoc_session)
+    function _extractAssociation($assoc_response, $assoc_session)
     {
         // Extract the common fields from the response, raising an
         // exception if they are not found
@@ -1748,10 +1748,10 @@
      * class.  Instances of this class are created by the library when
      * needed.
      */
-    function Auth_OpenID_AuthRequest(&$endpoint, $assoc)
+    function Auth_OpenID_AuthRequest($endpoint, $assoc)
     {
         $this->assoc = $assoc;
-        $this->endpoint =& $endpoint;
+        $this->endpoint = $endpoint;
         $this->return_to_args = array();
         $this->message = new Auth_OpenID_Message(
             $endpoint->preferredNamespace());
@@ -1764,7 +1764,7 @@
      * $extension_request: An object that implements the extension
      * request interface for adding arguments to an OpenID message.
      */
-    function addExtension(&$extension_request)
+    function addExtension($extension_request)
     {
         $extension_request->toMessage($this->message);
     }
@@ -2167,7 +2167,7 @@
     /**
      * @access private
      */
-    function fromMessage($message)
+    static function fromMessage($message)
     {
         $error_text = $message->getArg(
            Auth_OpenID_OPENID_NS, 'error', '<no error message supplied>');
diff -NaurB Auth/OpenID/CryptUtil.php Auth/OpenID/CryptUtil.php
--- Auth/OpenID/CryptUtil.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/CryptUtil.php	2009-12-03 11:39:34.000000000 +0100
@@ -37,7 +37,7 @@
      * @param int $num_bytes The length of the return value
      * @return string $bytes random bytes
      */
-    function getBytes($num_bytes)
+    static function getBytes($num_bytes)
     {
         static $f = null;
         $bytes = '';
@@ -77,7 +77,7 @@
      * @return string $result A string of randomly-chosen characters
      * from $chrs
      */
-    function randomString($length, $population = null)
+    static function randomString($length, $population = null)
     {
         if ($population === null) {
             return Auth_OpenID_CryptUtil::getBytes($length);
@@ -106,4 +106,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/OpenID/DiffieHellman.php Auth/OpenID/DiffieHellman.php
--- Auth/OpenID/DiffieHellman.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/DiffieHellman.php	2009-12-03 00:00:20.000000000 +0100
@@ -51,9 +51,9 @@
                                        $private = null, $lib = null)
     {
         if ($lib === null) {
-            $this->lib =& Auth_OpenID_getMathLib();
+            $this->lib = Auth_OpenID_getMathLib();
         } else {
-            $this->lib =& $lib;
+            $this->lib = $lib;
         }
 
         if ($mod === null) {
diff -NaurB Auth/OpenID/Discover.php Auth/OpenID/Discover.php
--- Auth/OpenID/Discover.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/Discover.php	2009-12-03 11:59:57.000000000 +0100
@@ -124,7 +124,7 @@
         return in_array(Auth_OpenID_TYPE_2_0_IDP, $this->type_uris);
     }
 
-    function fromOPEndpointURL($op_endpoint_url)
+    static function fromOPEndpointURL($op_endpoint_url)
     {
         // Construct an OP-Identifier OpenIDServiceEndpoint object for
         // a given OP Endpoint URL
@@ -177,9 +177,9 @@
      * @return array of Auth_OpenID_ServiceEndpoint or null if the
      * document cannot be parsed.
      */
-    function fromXRDS($uri, $xrds_text)
+    static function fromXRDS($uri, $xrds_text)
     {
-        $xrds =& Auth_Yadis_XRDS::parseXRDS($xrds_text);
+        $xrds = Auth_Yadis_XRDS::parseXRDS($xrds_text);
 
         if ($xrds) {
             $yadis_services =
@@ -197,7 +197,7 @@
      * @return array of Auth_OpenID_ServiceEndpoint or null if
      * endpoints cannot be created.
      */
-    function fromDiscoveryResult($discoveryResult)
+    static function fromDiscoveryResult($discoveryResult)
     {
         if ($discoveryResult->isXRDS()) {
             return Auth_OpenID_ServiceEndpoint::fromXRDS(
@@ -210,7 +210,7 @@
         }
     }
 
-    function fromHTML($uri, $html)
+    static function fromHTML($uri, $html)
     {
         $discovery_types = array(
                                  array(Auth_OpenID_TYPE_2_0,
@@ -273,7 +273,7 @@
     $service->parser->registerNamespace('xrd',
                                         Auth_Yadis_XMLNS_XRD_2_0);
 
-    $parser =& $service->parser;
+    $parser = $service->parser;
 
     $permitted_tags = array();
 
@@ -305,7 +305,7 @@
     return $local_id;
 }
 
-function filter_MatchesAnyOpenIDType(&$service)
+function filter_MatchesAnyOpenIDType($service)
 {
     $uris = $service->getTypes();
 
@@ -415,7 +415,7 @@
     return $s;
 }
 
-function Auth_OpenID_discoverWithYadis($uri, &$fetcher,
+function Auth_OpenID_discoverWithYadis($uri, $fetcher,
               $endpoint_filter='Auth_OpenID_getOPOrUserServices',
               $discover_function=null)
 {
@@ -433,7 +433,7 @@
     $openid_services = array();
 
     $response = call_user_func_array($discover_function,
-                                     array($uri, &$fetcher));
+                                     array($uri, $fetcher));
 
     $yadis_url = $response->normalized_uri;
     $yadis_services = array();
@@ -460,18 +460,18 @@
     }
 
     $openid_services = call_user_func_array($endpoint_filter,
-                                            array(&$openid_services));
+                                            array($openid_services));
 
     return array($yadis_url, $openid_services);
 }
 
-function Auth_OpenID_discoverURI($uri, &$fetcher)
+function Auth_OpenID_discoverURI($uri, $fetcher)
 {
     $uri = Auth_OpenID::normalizeUrl($uri);
     return Auth_OpenID_discoverWithYadis($uri, $fetcher);
 }
 
-function Auth_OpenID_discoverWithoutYadis($uri, &$fetcher)
+function Auth_OpenID_discoverWithoutYadis($uri, $fetcher)
 {
     $http_resp = @$fetcher->get($uri);
 
@@ -490,7 +490,7 @@
     return array($identity_url, $openid_services);
 }
 
-function Auth_OpenID_discoverXRI($iname, &$fetcher)
+function Auth_OpenID_discoverXRI($iname, $fetcher)
 {
     $resolver = new Auth_Yadis_ProxyResolver($fetcher);
     list($canonicalID, $yadis_services) =
@@ -513,7 +513,7 @@
     return array($iname, $openid_services);
 }
 
-function Auth_OpenID_discover($uri, &$fetcher)
+function Auth_OpenID_discover($uri, $fetcher)
 {
     // If the fetcher (i.e., PHP) doesn't support SSL, we can't do
     // discovery on an HTTPS URL.
diff -NaurB Auth/OpenID/Extension.php Auth/OpenID/Extension.php
--- Auth/OpenID/Extension.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/Extension.php	2009-12-02 23:54:01.000000000 +0100
@@ -39,7 +39,7 @@
      *
      * Returns the message with the extension arguments added.
      */
-    function toMessage(&$message)
+    function toMessage($message)
     {
         $implicit = $message->isOpenID1();
         $added = $message->namespaces->addAlias($this->ns_uri,
@@ -59,4 +59,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/OpenID/FileStore.php Auth/OpenID/FileStore.php
--- Auth/OpenID/FileStore.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/FileStore.php	2009-12-03 12:16:54.000000000 +0100
@@ -519,7 +519,7 @@
     /**
      * @access private
      */
-    function _mkdtemp($dir)
+    static function _mkdtemp($dir)
     {
         foreach (range(0, 4) as $i) {
             $name = $dir . strval(DIRECTORY_SEPARATOR) . strval(getmypid()) .
diff -NaurB Auth/OpenID/KVForm.php Auth/OpenID/KVForm.php
--- Auth/OpenID/KVForm.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/KVForm.php	2009-12-03 11:34:42.000000000 +0100
@@ -26,7 +26,7 @@
      * @static
      * @access private
      */
-    function toArray($kvs, $strict=false)
+    static function toArray($kvs, $strict=false)
     {
         $lines = explode("\n", $kvs);
 
@@ -78,7 +78,7 @@
      * @static
      * @access private
      */
-    function fromArray($values)
+    static function fromArray($values)
     {
         if ($values === null) {
             return null;
@@ -109,4 +109,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/OpenID/Message.php Auth/OpenID/Message.php
--- Auth/OpenID/Message.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/Message.php	2009-12-03 11:47:37.000000000 +0100
@@ -143,7 +143,7 @@
      * Returns true if $thing is an Auth_OpenID_Mapping object; false
      * if not.
      */
-    function isA($thing)
+    static function isA($thing)
     {
         return (is_object($thing) &&
                 strtolower(get_class($thing)) == 'auth_openid_mapping');
@@ -442,7 +442,7 @@
         return $this->getOpenIDNamespace() == Auth_OpenID_OPENID2_NS;
     }
 
-    function fromPostArgs($args)
+    static function fromPostArgs($args)
     {
         // Construct a Message containing a set of POST arguments
         $obj = new Auth_OpenID_Message();
@@ -477,7 +477,7 @@
         }
     }
 
-    function fromOpenIDArgs($openid_args)
+    static function fromOpenIDArgs($openid_args)
     {
         // Takes an array.
 
@@ -594,7 +594,7 @@
         return $this->_openid_ns_uri;
     }
 
-    function fromKVForm($kvform_string)
+    static function fromKVForm($kvform_string)
     {
         // Create a Message from a KVForm string
         return Auth_OpenID_Message::fromOpenIDArgs(
diff -NaurB Auth/OpenID/PAPE.php Auth/OpenID/PAPE.php
--- Auth/OpenID/PAPE.php	2009-04-21 20:31:19.000000000 +0200
+++ Auth/OpenID/PAPE.php	2009-12-03 11:49:55.000000000 +0100
@@ -21,7 +21,7 @@
        'http://schemas.openid.net/pape/policies/2007/06/phishing-resistant');
 
 define('PAPE_TIME_VALIDATOR',
-       '^[0-9]{4,4}-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9]Z$');
+      '/^[0-9]{4,4}-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9]Z$/');
 /**
  * A Provider Authentication Policy request, sent from a relying party
  * to a provider
@@ -82,7 +82,7 @@
      * Instantiate a Request object from the arguments in a checkid_*
      * OpenID message
      */
-    function fromOpenIDRequest($request)
+    static function fromOpenIDRequest($request)
     {
         $obj = new Auth_OpenID_PAPE_Request();
         $args = $request->message->getArgs(Auth_OpenID_PAPE_NS_URI);
@@ -201,7 +201,7 @@
      * @returns: A provider authentication policy response from the
      * data that was supplied with the id_res response.
      */
-    function fromSuccessResponse($success_response)
+    static function fromSuccessResponse($success_response)
     {
         $obj = new Auth_OpenID_PAPE_Response();
 
@@ -262,7 +262,7 @@
 
         $auth_time = Auth_OpenID::arrayGet($args, 'auth_time');
         if ($auth_time !== null) {
-            if (ereg(PAPE_TIME_VALIDATOR, $auth_time)) {
+            if (preg_match(PAPE_TIME_VALIDATOR, $auth_time)) {
                 $this->auth_time = $auth_time;
             } else if ($strict) {
                 return false;
@@ -287,7 +287,7 @@
         }
 
         if ($this->auth_time !== null) {
-            if (!ereg(PAPE_TIME_VALIDATOR, $this->auth_time)) {
+            if (!preg_match(PAPE_TIME_VALIDATOR, $this->auth_time)) {
                 return false;
             }
 
@@ -298,4 +298,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/OpenID/Server.php Auth/OpenID/Server.php
--- Auth/OpenID/Server.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/OpenID/Server.php	2009-12-03 12:11:41.000000000 +0100
@@ -365,7 +365,7 @@
         $this->message = null;
     }
 
-    function fromMessage($message, $server=null)
+    static function fromMessage($message, $server=null)
     {
         $required_keys = array('assoc_handle', 'sig', 'signed');
 
@@ -396,7 +396,7 @@
         return $result;
     }
 
-    function answer(&$signatory)
+    function answer($signatory)
     {
         $is_valid = $signatory->verify($this->assoc_handle, $this->signed);
 
@@ -436,7 +436,7 @@
     var $needs_math = false;
     var $allowed_assoc_types = array('HMAC-SHA1', 'HMAC-SHA256');
 
-    function fromMessage($unused_request)
+    static function fromMessage($unused_request)
     {
         return new Auth_OpenID_PlainTextServerSession();
     }
@@ -469,7 +469,7 @@
         $this->consumer_pubkey = $consumer_pubkey;
     }
 
-    function getDH($message)
+    static function getDH($message)
     {
         $dh_modulus = $message->getArg(Auth_OpenID_OPENID_NS, 'dh_modulus');
         $dh_gen = $message->getArg(Auth_OpenID_OPENID_NS, 'dh_gen');
@@ -489,7 +489,7 @@
                                 $missing);
         }
 
-        $lib =& Auth_OpenID_getMathLib();
+        $lib = Auth_OpenID_getMathLib();
 
         if ($dh_modulus || $dh_gen) {
             $dh_modulus = $lib->base64ToLong($dh_modulus);
@@ -523,7 +523,7 @@
         return array($dh, $consumer_pubkey);
     }
 
-    function fromMessage($message)
+    static function fromMessage($message)
     {
         $result = Auth_OpenID_DiffieHellmanSHA1ServerSession::getDH($message);
 
@@ -538,7 +538,7 @@
 
     function answer($secret)
     {
-        $lib =& Auth_OpenID_getMathLib();
+        $lib = Auth_OpenID_getMathLib();
         $mac_key = $this->dh->xorSecret($this->consumer_pubkey, $secret,
                                         $this->hash_func);
         return array(
@@ -560,7 +560,7 @@
     var $hash_func = 'Auth_OpenID_SHA256';
     var $allowed_assoc_types = array('HMAC-SHA256');
 
-    function fromMessage($message)
+    static function fromMessage($message)
     {
         $result = Auth_OpenID_DiffieHellmanSHA1ServerSession::getDH($message);
 
@@ -582,7 +582,7 @@
 class Auth_OpenID_AssociateRequest extends Auth_OpenID_Request {
     var $mode = "associate";
 
-    function getSessionClasses()
+    static function getSessionClasses()
     {
         return array(
           'no-encryption' => 'Auth_OpenID_PlainTextServerSession',
@@ -590,14 +590,14 @@
           'DH-SHA256' => 'Auth_OpenID_DiffieHellmanSHA256ServerSession');
     }
 
-    function Auth_OpenID_AssociateRequest(&$session, $assoc_type)
+    function Auth_OpenID_AssociateRequest($session, $assoc_type)
     {
-        $this->session =& $session;
+        $this->session = $session;
         $this->namespace = Auth_OpenID_OPENID2_NS;
         $this->assoc_type = $assoc_type;
     }
 
-    function fromMessage($message, $server=null)
+    static function fromMessage($message, $server=null)
     {
         if ($message->isOpenID1()) {
             $session_type = $message->getArg(Auth_OpenID_OPENID_NS,
@@ -734,7 +734,7 @@
      */
     var $namespace;
     
-    function make(&$message, $identity, $return_to, $trust_root = null,
+    static function make($message, $identity, $return_to, $trust_root = null,
                   $immediate = false, $assoc_handle = null, $server = null)
     {
         if ($server === null) {
@@ -752,7 +752,7 @@
                                             $assoc_handle, $server);
 
         $r->namespace = $message->getOpenIDNamespace();
-        $r->message =& $message;
+        $r->message = $message;
 
         if (!$r->trustRootValid()) {
             return new Auth_OpenID_UntrustedReturnURL($message,
@@ -778,7 +778,7 @@
         }
         $this->return_to = $return_to;
         $this->trust_root = $trust_root;
-        $this->server =& $server;
+        $this->server = $server;
 
         if ($immediate) {
             $this->immediate = true;
@@ -821,7 +821,7 @@
                                     array($this->trust_root, $this->return_to));
     }
 
-    function fromMessage(&$message, $server)
+    static function fromMessage($message, $server)
     {
         $mode = $message->getArg(Auth_OpenID_OPENID_NS, 'mode');
         $immediate = null;
@@ -1097,7 +1097,7 @@
                                   in OpenID 1.x immediate mode.');
                 }
 
-                $setup_request =& new Auth_OpenID_CheckIDRequest(
+                $setup_request = new Auth_OpenID_CheckIDRequest(
                                                 $this->identity,
                                                 $this->return_to,
                                                 $this->trust_root,
@@ -1183,9 +1183,9 @@
  */
 class Auth_OpenID_ServerResponse {
 
-    function Auth_OpenID_ServerResponse(&$request)
+    function Auth_OpenID_ServerResponse($request)
     {
-        $this->request =& $request;
+        $this->request = $request;
         $this->fields = new Auth_OpenID_Message($this->request->namespace);
     }
 
@@ -1310,10 +1310,10 @@
     /**
      * Create a new signatory using a given store.
      */
-    function Auth_OpenID_Signatory(&$store)
+    function Auth_OpenID_Signatory($store)
     {
         // assert store is not None
-        $this->store =& $store;
+        $this->store = $store;
     }
 
     /**
@@ -1447,7 +1447,7 @@
      * Encode an {@link Auth_OpenID_ServerResponse} and return an
      * {@link Auth_OpenID_WebResponse}.
      */
-    function encode(&$response)
+    function encode($response)
     {
         $cls = $this->responseFactory;
 
@@ -1478,16 +1478,16 @@
  */
 class Auth_OpenID_SigningEncoder extends Auth_OpenID_Encoder {
 
-    function Auth_OpenID_SigningEncoder(&$signatory)
+    function Auth_OpenID_SigningEncoder($signatory)
     {
-        $this->signatory =& $signatory;
+        $this->signatory = $signatory;
     }
 
     /**
      * Sign an {@link Auth_OpenID_ServerResponse} and return an
      * {@link Auth_OpenID_WebResponse}.
      */
-    function encode(&$response)
+    function encode($response)
     {
         // the isinstance is a bit of a kludge... it means there isn't
         // really an adapter to make the interfaces quite match.
@@ -1516,9 +1516,9 @@
  */
 class Auth_OpenID_Decoder {
 
-    function Auth_OpenID_Decoder(&$server)
+    function Auth_OpenID_Decoder($server)
     {
-        $this->server =& $server;
+        $this->server = $server;
 
         $this->handlers = array(
             'checkid_setup' => 'Auth_OpenID_CheckIDRequest',
@@ -1599,9 +1599,9 @@
  * @package OpenID
  */
 class Auth_OpenID_EncodingError {
-    function Auth_OpenID_EncodingError(&$response)
+    function Auth_OpenID_EncodingError($response)
     {
-        $this->response =& $response;
+        $this->response = $response;
     }
 }
 
@@ -1674,14 +1674,14 @@
  * @package OpenID
  */
 class Auth_OpenID_Server {
-    function Auth_OpenID_Server(&$store, $op_endpoint=null)
+    function Auth_OpenID_Server($store, $op_endpoint=null)
     {
-        $this->store =& $store;
-        $this->signatory =& new Auth_OpenID_Signatory($this->store);
-        $this->encoder =& new Auth_OpenID_SigningEncoder($this->signatory);
-        $this->decoder =& new Auth_OpenID_Decoder($this);
+        $this->store = $store;
+        $this->signatory = new Auth_OpenID_Signatory($this->store);
+        $this->encoder = new Auth_OpenID_SigningEncoder($this->signatory);
+        $this->decoder = new Auth_OpenID_Decoder($this);
         $this->op_endpoint = $op_endpoint;
-        $this->negotiator =& Auth_OpenID_getDefaultNegotiator();
+        $this->negotiator = Auth_OpenID_getDefaultNegotiator();
     }
 
     /**
@@ -1707,7 +1707,7 @@
     /**
      * The callback for 'check_authentication' messages.
      */
-    function openid_check_authentication(&$request)
+    function openid_check_authentication($request)
     {
         return $request->answer($this->signatory);
     }
@@ -1715,7 +1715,7 @@
     /**
      * The callback for 'associate' messages.
      */
-    function openid_associate(&$request)
+    function openid_associate($request)
     {
         $assoc_type = $request->assoc_type;
         $session_type = $request->session->session_type;
@@ -1738,7 +1738,7 @@
      * Encodes as response in the appropriate format suitable for
      * sending to the user agent.
      */
-    function encodeResponse(&$response)
+    function encodeResponse($response)
     {
         return $this->encoder->encode($response);
     }
diff -NaurB Auth/OpenID/SReg.php Auth/OpenID/SReg.php
--- Auth/OpenID/SReg.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/OpenID/SReg.php	2009-12-03 12:14:04.000000000 +0100
@@ -94,7 +94,7 @@
  * $endpoint: The endpoint object as returned by OpenID discovery.
  * returns whether an sreg type was advertised by the endpoint
  */
-function Auth_OpenID_supportsSReg(&$endpoint)
+function Auth_OpenID_supportsSReg($endpoint)
 {
     return ($endpoint->usesExtension(Auth_OpenID_SREG_NS_URI_1_1) ||
             $endpoint->usesExtension(Auth_OpenID_SREG_NS_URI_1_0));
@@ -122,7 +122,7 @@
      *
      * @access private
      */
-    function _getSRegNS(&$message)
+    static function _getSRegNS($message)
     {
         $alias = null;
         $found_ns_uri = null;
@@ -173,7 +173,7 @@
     /**
      * Initialize an empty simple registration request.
      */
-    function build($required=null, $optional=null,
+    static function build($required=null, $optional=null,
                    $policy_url=null,
                    $sreg_ns_uri=Auth_OpenID_SREG_NS_URI,
                    $cls='Auth_OpenID_SRegRequest')
@@ -213,7 +213,7 @@
      *
      * Returns the newly created simple registration request
      */
-    function fromOpenIDRequest($request, $cls='Auth_OpenID_SRegRequest')
+    static function fromOpenIDRequest($request, $cls='Auth_OpenID_SRegRequest')
     {
 
         $obj = call_user_func_array(array($cls, 'build'),
@@ -442,7 +442,7 @@
      * string (unicode) value. For instance, the nickname should be
      * stored under the key 'nickname'.
      */
-    function extractResponse($request, $data)
+    static function extractResponse($request, $data)
     {
         $obj = new Auth_OpenID_SRegResponse();
         $obj->ns_uri = $request->ns_uri;
@@ -471,7 +471,7 @@
      * Returns a simple registration response containing the data that
      * was supplied with the C{id_res} response.
      */
-    function fromSuccessResponse(&$success_response, $signed_only=true)
+    static function fromSuccessResponse($success_response, $signed_only=true)
     {
         global $Auth_OpenID_sreg_data_fields;
 
diff -NaurB Auth/OpenID/TrustRoot.php Auth/OpenID/TrustRoot.php
--- Auth/OpenID/TrustRoot.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/OpenID/TrustRoot.php	2009-12-03 11:41:59.000000000 +0100
@@ -58,7 +58,7 @@
      * @return The URL upon which relying party discovery should be
      * run in order to verify the return_to URL
      */
-    function buildDiscoveryURL($realm)
+    static function buildDiscoveryURL($realm)
     {
         $parsed = Auth_OpenID_TrustRoot::_parse($realm);
 
@@ -93,7 +93,7 @@
      * @return mixed $parsed Either an associative array of trust root
      * parts or false if parsing failed.
      */
-    function _parse($trust_root)
+    static function _parse($trust_root)
     {
         $trust_root = Auth_OpenID_urinorm($trust_root);
         if ($trust_root === null) {
@@ -199,7 +199,7 @@
      * @param string $trust_root The trust root to check
      * @return bool $sanity Whether the trust root looks OK
      */
-    function isSane($trust_root)
+    static function isSane($trust_root)
     {
         $parts = Auth_OpenID_TrustRoot::_parse($trust_root);
         if ($parts === false) {
@@ -269,7 +269,7 @@
      * @return bool $matches Whether the URL matches against the
      * trust root
      */
-    function match($trust_root, $url)
+    static function match($trust_root, $url)
     {
         $trust_root_parsed = Auth_OpenID_TrustRoot::_parse($trust_root);
         $url_parsed = Auth_OpenID_TrustRoot::_parse($url);
@@ -341,7 +341,7 @@
  * @returns: The endpoint URL or None if the endpoint is not a
  * relying party endpoint.
  */
-function filter_extractReturnURL(&$endpoint)
+function filter_extractReturnURL($endpoint)
 {
     if ($endpoint->matchTypes(array(Auth_OpenID_RP_RETURN_TO_URL_TYPE))) {
         return $endpoint;
@@ -394,7 +394,7 @@
  * Given a relying party discovery URL return a list of return_to
  * URLs.
  */
-function Auth_OpenID_getAllowedReturnURLs($relying_party_url, &$fetcher,
+function Auth_OpenID_getAllowedReturnURLs($relying_party_url, $fetcher,
               $discover_function=null)
 {
     if ($discover_function === null) {
@@ -435,7 +435,7 @@
  *
  * @return true if the return_to URL is valid for the realm
  */
-function Auth_OpenID_verifyReturnTo($realm_str, $return_to, &$fetcher,
+function Auth_OpenID_verifyReturnTo($realm_str, $return_to, $fetcher,
               $_vrfy='Auth_OpenID_getAllowedReturnURLs')
 {
     $disco_url = Auth_OpenID_TrustRoot::buildDiscoveryURL($realm_str);
@@ -445,7 +445,7 @@
     }
 
     $allowable_urls = call_user_func_array($_vrfy,
-                           array($disco_url, &$fetcher));
+                           array($disco_url, $fetcher));
 
     // The realm_str could not be parsed.
     if ($allowable_urls === false) {
@@ -459,4 +459,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/OpenID.php Auth/OpenID.php
--- Auth/OpenID.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/OpenID.php	2009-12-03 11:32:38.000000000 +0100
@@ -120,7 +120,7 @@
      *
      * @access private
      */
-    function isFailure($thing)
+    static function isFailure($thing)
     {
         return is_a($thing, 'Auth_OpenID_FailureResponse');
     }
@@ -141,7 +141,7 @@
      *
      * @access private
      */
-    function getQuery($query_str=null)
+    static function getQuery($query_str=null)
     {
         $data = array();
 
@@ -177,7 +177,7 @@
         return $data;
     }
 
-    function params_from_string($str)
+    static function params_from_string($str)
     {
         $chunks = explode("&", $str);
 
@@ -203,7 +203,7 @@
      *
      * @access private
      */
-    function ensureDir($dir_name)
+    static function ensureDir($dir_name)
     {
         if (is_dir($dir_name) || @mkdir($dir_name)) {
             return true;
@@ -225,7 +225,7 @@
      *
      * @access private
      */
-    function addPrefix($values, $prefix)
+    static function addPrefix($values, $prefix)
     {
         $new_values = array();
         foreach ($values as $s) {
@@ -241,7 +241,7 @@
      *
      * @access private
      */
-    function arrayGet($arr, $key, $fallback = null)
+    static function arrayGet($arr, $key, $fallback = null)
     {
         if (is_array($arr)) {
             if (array_key_exists($key, $arr)) {
@@ -261,7 +261,7 @@
     /**
      * Replacement for PHP's broken parse_str.
      */
-    function parse_str($query)
+    static function parse_str($query)
     {
         if ($query === null) {
             return null;
@@ -295,7 +295,7 @@
      * pairs from $data into a URL query string
      * (e.g. "username=bob&id=56").
      */
-    function httpBuildQuery($data)
+    static function httpBuildQuery($data)
     {
         $pairs = array();
         foreach ($data as $key => $value) {
@@ -323,7 +323,7 @@
      * @return string $url The original URL with the new parameters added.
      *
      */
-    function appendArgs($url, $args)
+    static function appendArgs($url, $args)
     {
         if (count($args) == 0) {
             return $url;
@@ -367,7 +367,7 @@
      * @return string $url The URL resulting from assembling the
      * specified components.
      */
-    function urlunparse($scheme, $host, $port = null, $path = '/',
+    static function urlunparse($scheme, $host, $port = null, $path = '/',
                         $query = '', $fragment = '')
     {
 
@@ -412,7 +412,7 @@
      * @return mixed $new_url The URL after normalization, or null if
      * $url was malformed.
      */
-    function normalizeUrl($url)
+    static function normalizeUrl($url)
     {
         @$parsed = parse_url($url);
 
@@ -443,7 +443,7 @@
      *
      * @access private
      */
-    function intval($value)
+    static function intval($value)
     {
         $re = "/^\\d+$/";
 
@@ -461,7 +461,7 @@
      * @param string $str The string of bytes to count.
      * @return int The number of bytes in $str.
      */
-    function bytes($str)
+    static function bytes($str)
     {
         return strlen(bin2hex($str)) / 2;
     }
@@ -470,7 +470,7 @@
      * Get the bytes in a string independently of multibyte support
      * conditions.
      */
-    function toBytes($str)
+    static function toBytes($str)
     {
         $hex = bin2hex($str);
 
@@ -486,7 +486,7 @@
         return $b;
     }
 
-    function urldefrag($url)
+    static function urldefrag($url)
     {
         $parts = explode("#", $url, 2);
 
@@ -497,7 +497,7 @@
         }
     }
 
-    function filter($callback, &$sequence)
+    static function filter($callback, &$sequence)
     {
         $result = array();
 
@@ -510,7 +510,7 @@
         return $result;
     }
 
-    function update(&$dest, &$src)
+    static function update(&$dest, &$src)
     {
         foreach ($src as $k => $v) {
             $dest[$k] = $v;
@@ -524,14 +524,14 @@
      *
      * @param string $format_string The sprintf format for the message
      */
-    function log($format_string)
+    static function log($format_string)
     {
         $args = func_get_args();
         $message = call_user_func_array('sprintf', $args);
         error_log($message);
     }
 
-    function autoSubmitHTML($form, $title="OpenId transaction in progress")
+    static function autoSubmitHTML($form, $title="OpenId transaction in progress")
     {
         return("<html>".
                "<head><title>".
diff -NaurB Auth/Yadis/Manager.php Auth/Yadis/Manager.php
--- Auth/Yadis/Manager.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/Yadis/Manager.php	2009-12-03 11:56:01.000000000 +0100
@@ -387,11 +387,11 @@
      * @param string $session_key_suffix The optional session key
      * suffix override.
      */
-    function Auth_Yadis_Discovery(&$session, $url,
+    function Auth_Yadis_Discovery($session, $url,
                                       $session_key_suffix = null)
     {
         /// Initialize a discovery object
-        $this->session =& $session;
+        $this->session = $session;
         $this->url = $url;
         if ($session_key_suffix === null) {
             $session_key_suffix = $this->DEFAULT_SUFFIX;
@@ -405,7 +405,7 @@
      * Return the next authentication service for the pair of
      * user_input and session. This function handles fallback.
      */
-    function getNextService($discover_cb, &$fetcher)
+    function getNextService($discover_cb, $fetcher)
     {
         $manager = $this->getManager();
         if (!$manager || (!$manager->services)) {
@@ -466,7 +466,7 @@
      * @param $force True if the manager should be returned regardless
      * of whether it's a manager for $this->url.
      */
-    function &getManager($force=false)
+    function getManager($force=false)
     {
         // Extract the YadisServiceManager for this object's URL and
         // suffix from the session.
@@ -481,16 +481,13 @@
 
         if ($manager && ($manager->forURL($this->url) || $force)) {
             return $manager;
-        } else {
-            $unused = null;
-            return $unused;
         }
     }
 
     /**
      * @access private
      */
-    function &createManager($services, $yadis_url = null)
+    function createManager($services, $yadis_url = null)
     {
         $key = $this->getSessionKey();
         if ($this->getManager()) {
@@ -504,10 +501,6 @@
             $this->session->set($this->session_key,
                                 serialize($loader->toSession($manager)));
             return $manager;
-        } else {
-            // Oh, PHP.
-            $unused = null;
-            return $unused;
         }
     }
 
@@ -526,4 +519,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/Yadis/ParanoidHTTPFetcher.php Auth/Yadis/ParanoidHTTPFetcher.php
--- Auth/Yadis/ParanoidHTTPFetcher.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/Yadis/ParanoidHTTPFetcher.php	2009-12-02 23:24:29.000000000 +0100
@@ -109,9 +109,9 @@
             }
 
             curl_setopt($c, CURLOPT_WRITEFUNCTION,
-                        array(&$this, "_writeData"));
+                        array($this, "_writeData"));
             curl_setopt($c, CURLOPT_HEADERFUNCTION,
-                        array(&$this, "_writeHeader"));
+                        array($this, "_writeHeader"));
 
             if ($extra_headers) {
                 curl_setopt($c, CURLOPT_HTTPHEADER, $extra_headers);
@@ -190,7 +190,7 @@
         curl_setopt($c, CURLOPT_TIMEOUT, $this->timeout);
         curl_setopt($c, CURLOPT_URL, $url);
         curl_setopt($c, CURLOPT_WRITEFUNCTION,
-                    array(&$this, "_writeData"));
+                    array($this, "_writeData"));
 
         curl_exec($c);
 
@@ -223,4 +223,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/Yadis/XML.php Auth/Yadis/XML.php
--- Auth/Yadis/XML.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/Yadis/XML.php	2009-12-03 10:12:39.000000000 +0100
@@ -310,20 +310,16 @@
  * @param Auth_Yadis_XMLParser $parser An instance of a
  * Auth_Yadis_XMLParser subclass.
  */
-function Auth_Yadis_setDefaultParser(&$parser)
+function Auth_Yadis_setDefaultParser($parser)
 {
     global $__Auth_Yadis_defaultParser;
-    $__Auth_Yadis_defaultParser =& $parser;
+    $__Auth_Yadis_defaultParser = $parser;
 }
 
 function Auth_Yadis_getSupportedExtensions()
 {
-    return array(
-                 'dom' => array('classname' => 'Auth_Yadis_dom',
-                       'libname' => array('dom.so', 'dom.dll')),
-                 'domxml' => array('classname' => 'Auth_Yadis_domxml',
-                       'libname' => array('domxml.so', 'php_domxml.dll')),
-                 );
+    return array('dom'    => 'Auth_Yadis_dom',
+                 'domxml' => 'Auth_Yadis_domxml');
 }
 
 /**
@@ -332,43 +328,25 @@
  * Auth_Yadis_setDefaultParser has been called, the parser used in
  * that call will be returned instead.
  */
-function &Auth_Yadis_getXMLParser()
+function Auth_Yadis_getXMLParser()
 {
     global $__Auth_Yadis_defaultParser;
-
+    
     if (isset($__Auth_Yadis_defaultParser)) {
         return $__Auth_Yadis_defaultParser;
     }
-
-    $p = null;
-    $classname = null;
-
-    $extensions = Auth_Yadis_getSupportedExtensions();
-
-    // Return a wrapper for the resident implementation, if any.
-    foreach ($extensions as $name => $params) {
-        if (!extension_loaded($name)) {
-            foreach ($params['libname'] as $libname) {
-                if (@dl($libname)) {
-                    $classname = $params['classname'];
-                }
-            }
-        } else {
-            $classname = $params['classname'];
-        }
-        if (isset($classname)) {
-            $p = new $classname();
-            return $p;
-        }
-    }
-
-    if (!isset($p)) {
-        trigger_error('No XML parser was found', E_USER_ERROR);
-    } else {
+    
+    foreach(Auth_Yadis_getSupportedExtensions() as $extension => $classname)
+    {
+      if (extension_loaded($extension))
+      {
+        $p = new $classname();
         Auth_Yadis_setDefaultParser($p);
+        return $p;
+      }
     }
-
-    return $p;
+    
+    return false;
 }
 
 ?>
diff -NaurB Auth/Yadis/XRDS.php Auth/Yadis/XRDS.php
--- Auth/Yadis/XRDS.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/Yadis/XRDS.php	2009-12-03 11:50:29.000000000 +0100
@@ -255,11 +255,11 @@
      * Instantiate a Auth_Yadis_XRDS object.  Requires an XPath
      * instance which has been used to parse a valid XRDS document.
      */
-    function Auth_Yadis_XRDS(&$xmlParser, &$xrdNodes)
+    function Auth_Yadis_XRDS($xmlParser, $xrdNodes)
     {
-        $this->parser =& $xmlParser;
+        $this->parser = $xmlParser;
         $this->xrdNode = $xrdNodes[count($xrdNodes) - 1];
-        $this->allXrdNodes =& $xrdNodes;
+        $this->allXrdNodes = $xrdNodes;
         $this->serviceList = array();
         $this->_parse();
     }
@@ -273,7 +273,7 @@
      * @return mixed $xrds An instance of Auth_Yadis_XRDS or null,
      * depending on the validity of $xml_string
      */
-    function &parseXRDS($xml_string, $extra_ns_map = null)
+    static function parseXRDS($xml_string, $extra_ns_map = null)
     {
         $_null = null;
 
@@ -352,9 +352,9 @@
         $services = $this->parser->evalXPath('xrd:Service', $this->xrdNode);
 
         foreach ($services as $node) {
-            $s =& new Auth_Yadis_Service();
+            $s = new Auth_Yadis_Service();
             $s->element = $node;
-            $s->parser =& $this->parser;
+            $s->parser = $this->parser;
 
             $priority = $s->getPriority();
 
@@ -475,4 +475,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Auth/Yadis/XRI.php Auth/Yadis/XRI.php
--- Auth/Yadis/XRI.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/Yadis/XRI.php	2009-12-02 23:48:18.000000000 +0100
@@ -190,7 +190,7 @@
 
     // Now nodes are in reverse order.
     $xrd_list = array_reverse($xrds->allXrdNodes);
-    $parser =& $xrds->parser;
+    $parser = $xrds->parser;
     $node = $xrd_list[0];
 
     $canonicalID_nodes = $parser->evalXPath('xrd:CanonicalID', $node);
diff -NaurB Auth/Yadis/XRIRes.php Auth/Yadis/XRIRes.php
--- Auth/Yadis/XRIRes.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/Yadis/XRIRes.php	2009-12-02 23:48:51.000000000 +0100
@@ -8,9 +8,9 @@
 require_once 'Auth/Yadis/XRI.php';
 
 class Auth_Yadis_ProxyResolver {
-    function Auth_Yadis_ProxyResolver(&$fetcher, $proxy_url = null)
+    function Auth_Yadis_ProxyResolver($fetcher, $proxy_url = null)
     {
-        $this->fetcher =& $fetcher;
+        $this->fetcher = $fetcher;
         $this->proxy_url = $proxy_url;
         if (!$this->proxy_url) {
             $this->proxy_url = Auth_Yadis_getDefaultProxy();
diff -NaurB Auth/Yadis/Yadis.php Auth/Yadis/Yadis.php
--- Auth/Yadis/Yadis.php	2009-04-21 20:31:20.000000000 +0200
+++ Auth/Yadis/Yadis.php	2009-12-03 12:06:39.000000000 +0100
@@ -196,7 +196,7 @@
  * The filter functions (whose names appear in the array passed to
  * services()) take the following form:
  *
- * <pre>  function myFilter(&$service) {
+ * <pre>  function myFilter($service) {
  *       // Query $service object here.  Return true if the service
  *       // matches your query; false if not.
  *  }</pre>
@@ -207,7 +207,7 @@
  * this contrived example):
  *
  * <pre>
- *  function URIMatcher(&$service) {
+ *  function URIMatcher($service) {
  *      foreach ($service->getElements('xrd:URI') as $uri) {
  *          if (preg_match("/some_pattern/",
  *                         $service->parser->content($uri))) {
@@ -250,7 +250,7 @@
      * If Auth_Yadis_CURL_OVERRIDE is defined, this method will always
      * return a {@link Auth_Yadis_PlainHTTPFetcher}.
      */
-    function getHTTPFetcher($timeout = 20)
+    static function getHTTPFetcher($timeout = 20)
     {
         if (Auth_Yadis_Yadis::curlPresent() &&
             (!defined('Auth_Yadis_CURL_OVERRIDE'))) {
@@ -261,7 +261,7 @@
         return $fetcher;
     }
 
-    function curlPresent()
+    static function curlPresent()
     {
         return function_exists('curl_init');
     }
@@ -269,7 +269,7 @@
     /**
      * @access private
      */
-    function _getHeader($header_list, $names)
+   static function _getHeader($header_list, $names)
     {
         foreach ($header_list as $name => $value) {
             foreach ($names as $n) {
@@ -285,7 +285,7 @@
     /**
      * @access private
      */
-    function _getContentType($content_type_header)
+    static function _getContentType($content_type_header)
     {
         if ($content_type_header) {
             $parts = explode(";", $content_type_header);
@@ -317,7 +317,7 @@
      * Auth_Yadis_Yadis, depending on whether the discovery
      * succeeded.
      */
-    function discover($uri, &$fetcher,
+    static function discover($uri, $fetcher,
                       $extra_ns_map = null, $timeout = 20)
     {
         $result = new Auth_Yadis_DiscoveryResult($uri);
diff -NaurB PHPUnit/Assert.php PHPUnit/Assert.php
--- PHPUnit/Assert.php	2005-11-10 10:47:14.000000000 +0100
+++ PHPUnit/Assert.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,426 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: Assert.php,v 1.29 2005/11/10 09:47:14 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-/**
- * A set of assert methods.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_Assert {
-    /**
-     * @var    boolean
-     * @access private
-     */
-    var $_looselyTyped = FALSE;
-
-    /**
-     * Asserts that a haystack contains a needle.
-     *
-     * @param  mixed
-     * @param  mixed
-     * @param  string
-     * @access public
-     * @since  Method available since Release 1.1.0
-     */
-    function assertContains($needle, $haystack, $message = '') {
-        if (is_string($needle) && is_string($haystack)) {
-            $this->assertTrue(strpos($haystack, $needle) !== FALSE, $message);
-        }
-
-        else if (is_array($haystack) && !is_object($needle)) {
-            $this->assertTrue(in_array($needle, $haystack), $message);
-        }
-
-        else {
-            $this->fail('Unsupported parameter passed to assertContains().');
-        }
-    }
-
-    /**
-     * Asserts that a haystack does not contain a needle.
-     *
-     * @param  mixed
-     * @param  mixed
-     * @param  string
-     * @access public
-     * @since  Method available since Release 1.1.0
-     */
-    function assertNotContains($needle, $haystack, $message = '') {
-        if (is_string($needle) && is_string($haystack)) {
-            $this->assertFalse(strpos($haystack, $needle) !== FALSE, $message);
-        }
-
-        else if (is_array($haystack) && !is_object($needle)) {
-            $this->assertFalse(in_array($needle, $haystack), $message);
-        }
-
-        else {
-            $this->fail('Unsupported parameter passed to assertNotContains().');
-        }
-    }
-
-    /**
-     * Asserts that two variables are equal.
-     *
-     * @param  mixed
-     * @param  mixed
-     * @param  string
-     * @param  mixed
-     * @access public
-     */
-    function assertEquals($expected, $actual, $message = '', $delta = 0) {
-        if ((is_array($actual)  && is_array($expected)) ||
-            (is_object($actual) && is_object($expected))) {
-            if (is_array($actual) && is_array($expected)) {
-                ksort($actual);
-                ksort($expected);
-            }
-
-            if ($this->_looselyTyped) {
-                $actual   = $this->_convertToString($actual);
-                $expected = $this->_convertToString($expected);
-            }
-
-            $actual   = serialize($actual);
-            $expected = serialize($expected);
-
-            $message = sprintf(
-              '%sexpected %s, actual %s',
-
-              !empty($message) ? $message . ' ' : '',
-              $expected,
-              $actual
-            );
-
-            if ($actual !== $expected) {
-                return $this->fail($message);
-            }
-        }
-
-        elseif (is_numeric($actual) && is_numeric($expected)) {
-            $message = sprintf(
-              '%sexpected %s%s, actual %s',
-
-              !empty($message) ? $message . ' ' : '',
-              $expected,
-              ($delta != 0) ? ('+/- ' . $delta) : '',
-              $actual
-            );
-
-            if (!($actual >= ($expected - $delta) && $actual <= ($expected + $delta))) {
-                return $this->fail($message);
-            }
-        }
-
-        else {
-            $message = sprintf(
-              '%sexpected %s, actual %s',
-
-              !empty($message) ? $message . ' ' : '',
-              $expected,
-              $actual
-            );
-
-            if ($actual !== $expected) {
-                return $this->fail($message);
-            }
-        }
-    }
-
-    /**
-     * Asserts that two variables reference the same object.
-     * This requires the Zend Engine 2 to work.
-     *
-     * @param  object
-     * @param  object
-     * @param  string
-     * @access public
-     * @deprecated
-     */
-    function assertSame($expected, $actual, $message = '') {
-        if (!version_compare(phpversion(), '5.0.0', '>=')) {
-            $this->fail('assertSame() only works with PHP >= 5.0.0.');
-        }
-
-        if ((is_object($expected) || is_null($expected)) &&
-            (is_object($actual)   || is_null($actual))) {
-            $message = sprintf(
-              '%sexpected two variables to reference the same object',
-
-              !empty($message) ? $message . ' ' : ''
-            );
-
-            if ($expected !== $actual) {
-                return $this->fail($message);
-            }
-        } else {
-            $this->fail('Unsupported parameter passed to assertSame().');
-        }
-    }
-
-    /**
-     * Asserts that two variables do not reference the same object.
-     * This requires the Zend Engine 2 to work.
-     *
-     * @param  object
-     * @param  object
-     * @param  string
-     * @access public
-     * @deprecated
-     */
-    function assertNotSame($expected, $actual, $message = '') {
-        if (!version_compare(phpversion(), '5.0.0', '>=')) {
-            $this->fail('assertNotSame() only works with PHP >= 5.0.0.');
-        }
-
-        if ((is_object($expected) || is_null($expected)) &&
-            (is_object($actual)   || is_null($actual))) {
-            $message = sprintf(
-              '%sexpected two variables to reference different objects',
-
-              !empty($message) ? $message . ' ' : ''
-            );
-
-            if ($expected === $actual) {
-                return $this->fail($message);
-            }
-        } else {
-            $this->fail('Unsupported parameter passed to assertNotSame().');
-        }
-    }
-
-    /**
-     * Asserts that a variable is not NULL.
-     *
-     * @param  mixed
-     * @param  string
-     * @access public
-     */
-    function assertNotNull($actual, $message = '') {
-        $message = sprintf(
-          '%sexpected NOT NULL, actual NULL',
-
-          !empty($message) ? $message . ' ' : ''
-        );
-
-        if (is_null($actual)) {
-            return $this->fail($message);
-        }
-    }
-
-    /**
-     * Asserts that a variable is NULL.
-     *
-     * @param  mixed
-     * @param  string
-     * @access public
-     */
-    function assertNull($actual, $message = '') {
-        $message = sprintf(
-          '%sexpected NULL, actual NOT NULL',
-
-          !empty($message) ? $message . ' ' : ''
-        );
-
-        if (!is_null($actual)) {
-            return $this->fail($message);
-        }
-    }
-
-    /**
-     * Asserts that a condition is true.
-     *
-     * @param  boolean
-     * @param  string
-     * @access public
-     */
-    function assertTrue($condition, $message = '') {
-        $message = sprintf(
-          '%sexpected TRUE, actual FALSE',
-
-          !empty($message) ? $message . ' ' : ''
-        );
-
-        if (!$condition) {
-            return $this->fail($message);
-        }
-    }
-
-    /**
-     * Asserts that a condition is false.
-     *
-     * @param  boolean
-     * @param  string
-     * @access public
-     */
-    function assertFalse($condition, $message = '') {
-        $message = sprintf(
-          '%sexpected FALSE, actual TRUE',
-
-          !empty($message) ? $message . ' ' : ''
-        );
-
-        if ($condition) {
-            return $this->fail($message);
-        }
-    }
-
-    /**
-     * Asserts that a string matches a given regular expression.
-     *
-     * @param  string
-     * @param  string
-     * @param  string
-     * @access public
-     */
-    function assertRegExp($pattern, $string, $message = '') {
-        $message = sprintf(
-          '%s"%s" does not match pattern "%s"',
-
-          !empty($message) ? $message . ' ' : '',
-          $string,
-          $pattern
-        );
-
-        if (!preg_match($pattern, $string)) {
-            return $this->fail($message);
-        }
-    }
-
-    /**
-     * Asserts that a string does not match a given regular expression.
-     *
-     * @param  string
-     * @param  string
-     * @param  string
-     * @access public
-     * @since  Method available since Release 1.1.0
-     */
-    function assertNotRegExp($pattern, $string, $message = '') {
-        $message = sprintf(
-          '%s"%s" matches pattern "%s"',
-
-          !empty($message) ? $message . ' ' : '',
-          $string,
-          $pattern
-        );
-
-        if (preg_match($pattern, $string)) {
-            return $this->fail($message);
-        }
-    }
-
-    /**
-     * Asserts that a variable is of a given type.
-     *
-     * @param  string          $expected
-     * @param  mixed           $actual
-     * @param  optional string $message
-     * @access public
-     */
-    function assertType($expected, $actual, $message = '') {
-        return $this->assertEquals(
-          $expected,
-          gettype($actual),
-          $message
-        );
-    }
-
-    /**
-     * Converts a value to a string.
-     *
-     * @param  mixed   $value
-     * @access private
-     */
-    function _convertToString($value) {
-        foreach ($value as $k => $v) {
-            if (is_array($v)) {
-                $value[$k] = $this->_convertToString($value[$k]);
-            } else {
-                settype($value[$k], 'string');
-            }
-        }
-
-        return $value;
-    }
-
-    /**
-     * @param  boolean $looselyTyped
-     * @access public
-     */
-    function setLooselyTyped($looselyTyped) {
-        if (is_bool($looselyTyped)) {
-            $this->_looselyTyped = $looselyTyped;
-        }
-    }
-
-    /**
-     * Fails a test with the given message.
-     *
-     * @param  string
-     * @access protected
-     * @abstract
-     */
-    function fail($message = '') { /* abstract */ }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/GUI/Gtk.php PHPUnit/GUI/Gtk.php
--- PHPUnit/GUI/Gtk.php	2005-11-10 10:47:15.000000000 +0100
+++ PHPUnit/GUI/Gtk.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,740 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Scott Mattocks <scott@crisscott.com>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: Gtk.php,v 1.6 2005/11/10 09:47:15 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.2.0
- */
-
-if (!function_exists('is_a')) {
-    require_once 'PHP/Compat/Function/is_a.php';
-}
-
-/**
- * GTK GUI interface for PHPUnit.
- *
- * This class is a PHP port of junit.awtui.testrunner. Documentation
- * for junit.awtui.testrunner can be found at
- * http://junit.sourceforge.net
- *
- * Due to the limitations of PHP4 and PHP-Gtk, this class can not
- * duplicate all of the functionality of the JUnit GUI. Some of the
- * things this class cannot do include:
- * - Reloading the class for each run
- * - Stopping the test in progress
- *
- * To use simply intantiate the class and call main()
- * $gtk =& new PHPUnit_GUI_Gtk;
- * $gtk->main();
- *
- * Once the window has finished loading, you can enter the name of
- * a class that has been loaded (include/require some where in your
- * code, or you can pass the name of the file containing the class.
- *
- * You can also load classes using the SetupDecorator class.
- * require_once 'PHPUnit/GUI/SetupDecorator.php';
- * require_once 'PHPUnit/GUI/Gtk.php';
- * $gui = new PHPUnit_GUI_SetupDecorator(new PHPUnit_GUI_Gtk());
- * $gui->getSuitesFromDir('/path/to/test','.*\.php$',array('index.php','sql.php'));
- * $gui->show();
- *
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Scott Mattocks <scott@crisscott.com>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.2.0
- * @todo       Allow file drop. (Gtk_FileDrop)
- */
-class PHPUnit_GUI_Gtk {
-
-    /**
-     * The main gtk window
-     * @var object
-     */
-    var $gui;
-    /**
-     * The text entry that contains the name of the
-     * file that holds the test(s)/suite(s).
-     * @var object
-     */
-    var $suiteField;
-    /**
-     * The label that shows the number of tests that
-     * were run.
-     * @var object
-     */
-    var $numberOfRuns;
-    /**
-     * The label that shows the number of errors that
-     * were encountered.
-     * @var object
-     */
-    var $numberOfErrors;
-    /**
-     * The label that shows the number of failures
-     * that were encountered.
-     * @var object
-     */
-    var $numberOfFailures;
-    /**
-     * The label for reporting user messages.
-     * @var object
-     */
-    var $statusLine;
-    /**
-     * The text area for reporting messages from successful
-     * test runs. (not necessarily successful tests)
-     * @var object
-     */
-    var $reportArea;
-    /**
-     * The text area for reporting errors encountered when
-     * running tests.
-     * @var object
-     */
-    var $dumpArea;
-    /**
-     * The progress bar indicator. Shows the percentage of
-     * passed tests.
-     * @var object
-     */
-    var $progress;
-    /**
-     * A checkbox for the user to indicate whether or not they
-     * would like to see results from all tests or just failures.
-     * @object
-     */
-    var $showPassed;
-
-    /**
-     * Constructor.
-     *
-     * The constructor checks for the gtk extension and loads it
-     * if needed. Then it creates the GUI. The GUI is not shown
-     * nor is the main gtk loop started until main() is called.
-     *
-     * @access public
-     * @param  none
-     * @return void
-     */
-    function PHPUnit_GUI_Gtk()
-    {
-        // Check for php-gtk extension.
-        if (!extension_loaded('gtk')) {
-            dl( 'php_gtk.' . PHP_SHLIB_SUFFIX);
-        }
-
-        // Create the interface but don't start the loop
-        $this->_createUI();
-    }
-    /**
-     * Start the main gtk loop.
-     *
-     * main() first sets the default state of the showPassed
-     * check box. Next all widgets that are part of the GUI
-     * are shown. Finally the main gtk loop is started.
-     *
-     * @access public
-     * @param  boolean $showPassed
-     * @return void
-     */
-    function main($showPassed = true)
-    {
-        $this->showPassed->set_active($showPassed);
-        $this->gui->show_all();
-
-        gtk::main();
-    }
-    /**
-     * Create the user interface.
-     *
-     * The user interface is pretty simple. It consists of a
-     * menu, text entry, run button, some labels, a progress
-     * indicator, and a couple of areas for notification of
-     * any messages.
-     *
-     * @access private
-     * @param  none
-     * @return void
-     */
-    function _createUI()
-    {
-        // Create a window.
-        $window =& new GtkWindow;
-        $window->set_title('PHPUnit Gtk');
-        $window->set_usize(400, -1);
-
-        // Create the main box.
-        $mainBox =& new GtkVBox;
-        $window->add($mainBox);
-
-        // Start with the menu.
-        $mainBox->pack_start($this->_createMenu());
-
-        // Then add the suite field entry.
-        $mainBox->pack_start($this->_createSuiteEntry());
-
-        // Then add the report labels.
-        $mainBox->pack_start($this->_createReportLabels());
-
-        // Next add the progress bar.
-        $mainBox->pack_start($this->_createProgressBar());
-
-        // Then add the report area and the dump area.
-        $mainBox->pack_start($this->_createReportAreas());
-
-        // Finish off with the status line.
-        $mainBox->pack_start($this->_createStatusLine());
-
-        // Connect the destroy signal.
-        $window->connect_object('destroy', array('gtk', 'main_quit'));
-
-        // Assign the member.
-        $this->gui =& $window;
-    }
-    /**
-     * Create the menu.
-     *
-     * The menu is very simple. It an exit menu item, which exits
-     * the application, and an about menu item, which shows some
-     * basic information about the application itself.
-     *
-     * @access private
-     * @param  none
-     * @return &object The GtkMenuBar
-     */
-    function &_createMenu()
-    {
-        // Create the menu bar.
-        $menuBar =& new GtkMenuBar;
-
-        // Create the main (only) menu item.
-        $phpHeader =& new GtkMenuItem('PHPUnit');
-
-        // Add the menu item to the menu bar.
-        $menuBar->append($phpHeader);
-
-        // Create the PHPUnit menu.
-        $phpMenu =& new GtkMenu;
-
-        // Add the menu items
-        $about =& new GtkMenuItem('About...');
-        $about->connect('activate', array(&$this, 'about'));
-        $phpMenu->append($about);
-
-        $exit =& new GtkMenuItem('Exit');
-        $exit->connect_object('activate', array('gtk', 'main_quit'));
-        $phpMenu->append($exit);
-
-        // Complete the menu.
-        $phpHeader->set_submenu($phpMenu);
-
-        return $menuBar;
-    }
-    /**
-     * Create the suite entry and related widgets.
-     *
-     * The suite entry has some supporting components such as a
-     * label, the show passed check box and the run button. All
-     * of these items are packed into two nested boxes.
-     *
-     * @access private
-     * @param  none
-     * @return &object A box that contains all of the suite entry pieces.
-     */
-    function &_createSuiteEntry()
-    {
-        // Create the outermost box.
-        $outerBox         =& new GtkVBox;
-
-        // Create the suite label, box, and field.
-        $suiteLabel       =& new GtkLabel('Test class name:');
-        $suiteBox         =& new GtkHBox;
-        $this->suiteField =& new GtkEntry;
-        $this->suiteField->set_text($suiteName != NULL ? $suiteName : '');
-
-        // Create the button the user will use to start the test.
-        $runButton =& new GtkButton('Run');
-        $runButton->connect_object('clicked', array(&$this, 'run'));
-
-        // Create the check box that lets the user show only failures.
-        $this->showPassed =& new GtkCheckButton('Show passed tests');
-
-        // Add the components to their respective boxes.
-        $suiteLabel->set_alignment(0, 0);
-        $outerBox->pack_start($suiteLabel);
-        $outerBox->pack_start($suiteBox);
-        $outerBox->pack_start($this->showPassed);
-
-        $suiteBox->pack_start($this->suiteField);
-        $suiteBox->pack_start($runButton);
-
-        return $outerBox;
-    }
-
-    /**
-     * Create the labels that tell the user what has happened.
-     *
-     * There are three labels, one each for total runs, errors and
-     * failures. There is also one label for each of these that
-     * describes what the label is. It could be done with one label
-     * instead of two but that would make updates much harder.
-     *
-     * @access private
-     * @param  none
-     * @return &object A box containing the labels.
-     */
-    function &_createReportLabels()
-    {
-        // Create a box to hold everything.
-        $labelBox         =& new GtkHBox;
-
-        // Create the non-updated labels.
-        $numberOfRuns     =& new GtkLabel('Runs:');
-        $numberOfErrors   =& new GtkLabel('Errors:');
-        $numberOfFailures =& new GtkLabel('Failures:');
-
-        // Create the labels that will be updated.
-        // These are asssigned to members to make it easier to
-        // set their values later.
-        $this->numberOfRuns     =& new GtkLabel(0);
-        $this->numberOfErrors   =& new GtkLabel(0);
-        $this->numberOfFailures =& new GtkLabel(0);
-
-        // Pack everything in.
-        $labelBox->pack_start($numberOfRuns);
-        $labelBox->pack_start($this->numberOfRuns);
-        $labelBox->pack_start($numberOfErrors);
-        $labelBox->pack_start($this->numberOfErrors);
-        $labelBox->pack_start($numberOfFailures);
-        $labelBox->pack_start($this->numberOfFailures);
-
-        return $labelBox;
-    }
-
-    /**
-     * Create the success/failure indicator.
-     *
-     * A GtkProgressBar is used to visually indicate how many
-     * tests were successful compared to how many were not. The
-     * progress bar shows the percentage of success and will
-     * change from green to red if there are any failures.
-     *
-     * @access private
-     * @param  none
-     * @return &object The progress bar
-     */
-    function &_createProgressBar()
-    {
-        // Create the progress bar.
-        $this->progress =& new GtkProgressBar(new GtkAdjustment(0, 0, 1, .1, 1, 0));
-
-        // Set the progress bar to print the percentage.
-        $this->progress->set_show_text(true);
-
-        return $this->progress;
-    }
-
-    /**
-     * Create the report text areas.
-     *
-     * The report area consists of one text area for failures, one
-     * text area for errors and one label for identification purposes.
-     * All three widgets are packed into a box.
-     *
-     * @access private
-     * @param  none
-     * @return &object The box containing the report areas.
-     */
-    function &_createReportAreas()
-    {
-        // Create the containing box.
-        $reportBox =& new GtkVBox;
-
-        // Create the identification label
-        $reportLabel =& new GtkLabel('Errors and Failures:');
-        $reportLabel->set_alignment(0, 0);
-
-        // Create the scrolled windows for the text areas.
-        $reportScroll =& new GtkScrolledWindow;
-        $dumpScroll   =& new GtkScrolledWindow;
-
-        // Make the scroll areas big enough.
-        $reportScroll->set_usize(-1, 150);
-        $dumpScroll->set_usize(-1, 150);
-
-        // Only show the vertical scroll bar when needed.
-        // Never show the horizontal scroll bar.
-        $reportScroll->set_policy(GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
-        $dumpScroll->set_policy(GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
-
-        // Create the text areas.
-        $this->reportArea =& new GtkText;
-        $this->dumpArea =& new GtkText;
-
-        // Don't let words get broken.
-        $this->reportArea->set_word_wrap(true);
-        $this->dumpArea->set_word_wrap(true);
-
-        // Pack everything in.
-        $reportBox->pack_start($reportLabel);
-        $reportScroll->add($this->reportArea);
-        $reportBox->pack_start($reportScroll);
-        $dumpScroll->add($this->dumpArea);
-        $reportBox->pack_start($dumpScroll);
-
-        return $reportBox;
-    }
-
-    /**
-     * Create a status label.
-     *
-     * A status line at the bottom of the application is used
-     * to notify the user of non-test related messages such as
-     * failures loading a test suite.
-     *
-     * @access private
-     * @param  none
-     * @return &object The status label.
-     */
-    function &_createStatusLine()
-    {
-        // Create the status label.
-        $this->statusLine =& new GtkLabel('');
-        $this->statusLine->set_alignment(0, 0);
-
-        return $this->statusLine;
-    }
-
-    /**
-     * Show a popup with information about the application.
-     *
-     * The popup should show information about the version,
-     * the author, the license, where to get the latest
-     * version and a short description.
-     *
-     * @access public
-     * @param  none
-     * @return void
-     */
-    function about()
-    {
-        // Create the new window.
-        $about =& new GtkWindow;
-        $about->set_title('About PHPUnit GUI Gtk');
-        $about->set_usize(250, -1);
-
-        // Put two vboxes in the hbox.
-        $vBox =& new GtkVBox;
-        $about->add($vBox);
-
-        // Create the labels.
-        $version     =& new GtkLabel(" Version: 1.0");
-        $license     =& new GtkLabel(" License: PHP License v3.0");
-        $where       =& new GtkLabel(" Download from: http://pear.php.net/PHPUnit/");
-        $unitAuth    =& new GtkLabel(" PHPUnit Author: Sebastian Bergman");
-        $gtkAuth     =& new GtkLabel(" Gtk GUI Author: Scott Mattocks");
-
-        // Align everything to the left
-        $where->set_alignment(0, .5);
-        $version->set_alignment(0, .5);
-        $license->set_alignment(0, .5);
-        $gtkAuth->set_alignment(0, .5);
-        $unitAuth->set_alignment(0, .5);
-
-        // Pack everything into the vBox;
-        $vBox->pack_start($version);
-        $vBox->pack_start($license);
-        $vBox->pack_start($where);
-        $vBox->pack_start($unitAuth);
-        $vBox->pack_start($gtkAuth);
-
-        // Connect the destroy signal.
-        $about->connect('destroy', array('gtk', 'true'));
-
-        // Show the goods.
-        $about->show_all();
-    }
-
-    /**
-     * Load the test suite.
-     *
-     * This method tries to load test suite based on the user
-     * info. If the user passes the name of a tests suite, it
-     * is instantiated and a new object is returned. If the
-     * user passes a file that contains a test suite, the class
-     * is instantiated and a new object is returned. If the user
-     * passes a file that contains a test case, the test case is
-     * passed to a new test suite and the new suite object is
-     * returned.
-     *
-     * @access public
-     * @param  string  The file that contains a test case/suite or the classname.
-     * @return &object The new test suite.
-     */
-    function &loadTest(&$file)
-    {
-        // Check to see if a class name was given.
-        if (is_a($file, 'PHPUnit_TestSuite')) {
-            return $file;
-        } elseif (class_exists($file)) {
-            require_once 'PHPUnit/TestSuite.php';
-            return new PHPUnit_TestSuite($file);
-        }
-
-        // Check that the file exists.
-        if (!@is_readable($file)) {
-            $this->_showStatus('Cannot find file: ' . $file);
-            return false;
-        }
-
-        $this->_showStatus('Loading test suite...');
-
-        // Instantiate the class.
-        // If the path is /path/to/test/TestClass.php
-        // the class name should be test_TestClass
-        require_once $file;
-        $className = str_replace(DIRECTORY_SEPARATOR, '_', $file);
-        $className = substr($className, 0, strpos($className, '.'));
-
-        require_once 'PHPUnit/TestSuite.php';
-        return new PHPUnit_TestSuite($className);
-    }
-
-    /**
-     * Run the test suite.
-     *
-     * This method runs the test suite and updates the messages
-     * for the user. When finished it changes the status line
-     * to 'Test Complete'
-     *
-     * @access public
-     * @param  none
-     * @return void
-     */
-    function runTest()
-    {
-        // Notify the user that the test is running.
-        $this->_showStatus('Running Test...');
-
-        // Run the test.
-        $result = PHPUnit::run($this->suite);
-
-        // Update the labels.
-        $this->_setLabelValue($this->numberOfRuns,     $result->runCount());
-        $this->_setLabelValue($this->numberOfErrors,   $result->errorCount());
-        $this->_setLabelValue($this->numberOfFailures, $result->failureCount());
-
-        // Update the progress bar.
-        $this->_updateProgress($result->runCount(),
-                               $result->errorCount(),
-                               $result->failureCount()
-                               );
-
-        // Show the errors.
-        $this->_showFailures($result->errors(), $this->dumpArea);
-
-        // Show the messages from the tests.
-        if ($this->showPassed->get_active()) {
-            // Show failures and success.
-            $this->_showAll($result, $this->reportArea);
-        } else {
-            // Show only failures.
-            $this->_showFailures($result->failures(), $this->reportArea);
-        }
-
-        // Update the status message.
-        $this->_showStatus('Test complete');
-    }
-
-    /**
-     * Set the text of a label.
-     *
-     * Change the text of a given label.
-     *
-     * @access private
-     * @param  widget  &$label The label whose value is to be changed.
-     * @param  string  $value  The new text of the label.
-     * @return void
-     */
-    function _setLabelValue(&$label, $value)
-    {
-        $label->set_text($value);
-    }
-
-    /**
-     * The main work of the application.
-     *
-     * Load the test suite and then execute the tests.
-     *
-     * @access public
-     * @param  none
-     * @return void
-     */
-    function run()
-    {
-        // Load the test suite.
-        $this->suite =& $this->loadTest($this->suiteField->get_text());
-
-        // Check to make sure the suite was loaded properly.
-        if (!is_object($this->suite)) {
-            // Raise an error.
-            $this->_showStatus('Could not load test suite.');
-            return false;
-        }
-
-        // Run the tests.
-        $this->runTest();
-    }
-
-    /**
-     * Update the status message.
-     *
-     * @access private
-     * @param  string  $status The new message.
-     * @return void
-     */
-    function _showStatus($status)
-    {
-        $this->statusLine->set_text($status);
-    }
-
-    /**
-     * Alias for main()
-     *
-     * @see main
-     */
-    function show($showPassed = true)
-    {
-        $this->main($showPassed);
-    }
-
-    /**
-     * Add a suite to the tests.
-     *
-     * This method is require by SetupDecorator. It adds a
-     * suite to the the current set of suites.
-     *
-     * @access public
-     * @param  object $testSuite The suite to add.
-     * @return void
-     */
-    function addSuites($testSuite)
-    {
-        if (!is_array($testSuite)) {
-            settype($testSuite, 'array');
-        }
-
-        foreach ($testSuite as $suite) {
-
-            if (is_a($this->suite, 'PHPUnit_TestSuite')) {
-                $this->suite->addTestSuite($suite->getName());
-            } else {
-                $this->suite =& $this->loadTest($suite);
-            }
-
-            // Set the suite field.
-            $text = $this->suiteField->get_text();
-            if (empty($text)) {
-                $this->suiteField->set_text($this->suite->getName());
-            }
-        }
-    }
-
-    /**
-     * Show all test messages.
-     *
-     * @access private
-     * @param  object  The TestResult from the test suite.
-     * @return void
-     */
-    function _showAll(&$result)
-    {
-        // Clear the area first.
-        $this->reportArea->delete_text(0, -1);
-        $this->reportArea->insert_text($result->toString(), 0);
-    }
-
-    /**
-     * Show failure/error messages in the given text area.
-     *
-     * @access private
-     * @param  object  &$results The results of the test.
-     * @param  widget  &$area    The area to show the results in.
-     */
-    function _showFailures(&$results, &$area)
-    {
-        $area->delete_text(0, -1);
-        foreach (array_reverse($results, true) as $result) {
-            $area->insert_text($result->toString(), 0);
-        }
-    }
-
-    /**
-     * Update the progress indicator.
-     *
-     * @access private
-     * @param  integer $runs
-     * @param  integer $errors
-     * @param  integer $failures
-     * @return void
-     */
-    function _updateProgress($runs, $errors, $failures)
-    {
-        $percentage = 1 - (($errors + $failures) / $runs);
-        $this->progress->set_percentage($percentage);
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/GUI/HTML.php PHPUnit/GUI/HTML.php
--- PHPUnit/GUI/HTML.php	2005-11-10 10:47:15.000000000 +0100
+++ PHPUnit/GUI/HTML.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,252 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Wolfram Kriesing <wolfram@kriesing.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: HTML.php,v 1.19 2005/11/10 09:47:15 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-/**
- * HTML GUI.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Wolfram Kriesing <wolfram@kriesing.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_GUI_HTML
-{
-    var $_suites = array();
-
-    /**
-    * the current implementation of PHPUnit is designed
-    * this way that adding a suite to another suite only
-    * grabs all the tests and adds them to the suite, so you
-    * have no chance to find out which test goes with which suite
-    * therefore you can simply pass an array of suites to this constructor here
-    *
-    * @param  array   The suites to be tested. If not given, then you might
-    *                 be using the SetupDecorator, which detects them automatically
-    *                 when calling getSuitesFromDir()
-    */
-    function PHPUnit_GUI_HTML($suites = array())
-    {
-        if (!is_array($suites)) {
-            $this->_suites = array($suites);
-        } else {
-            $this->_suites = $suites;
-        }
-    }
-
-    /**
-    * Add suites to the GUI
-    *
-    * @param  object  this should be an instance of PHPUnit_TestSuite
-    */
-    function addSuites($suites)
-    {
-        $this->_suites = array_merge($this->_suites,$suites);
-    }
-
-    /**
-    * this prints the HTML code straight out
-    *
-    */
-    function show()
-    {
-        $request    = $_REQUEST;
-        $showPassed = FALSE;
-        $submitted  = @$request['submitted'];
-
-        if ($submitted) {
-            $showPassed = @$request['showOK'] ? TRUE : FALSE;
-        }
-
-        $suiteResults = array();
-
-        foreach ($this->_suites as $aSuite) {
-            $aSuiteResult = array();
-
-            // remove the first directory's name from the test-suite name, since it
-            // mostly is something like 'tests' or alike
-            $removablePrefix = explode('_',$aSuite->getName());
-            $aSuiteResult['name'] = str_replace($removablePrefix[0].'_', '', $aSuite->getName());
-
-            if ($submitted && isset($request[$aSuiteResult['name']])) {
-                $result = PHPUnit::run($aSuite);
-
-                $aSuiteResult['counts']['run'] = $result->runCount();
-                $aSuiteResult['counts']['error'] = $result->errorCount();
-                $aSuiteResult['counts']['failure'] = $result->failureCount();
-
-                $aSuiteResult['results'] = $this->_prepareResult($result,$showPassed);
-
-                $per = 100/$result->runCount();
-                $failed = ($per*$result->errorCount())+($per*$result->failureCount());
-                $aSuiteResult['percent'] = round(100-$failed,2);
-            } else {
-                $aSuiteResult['addInfo'] = 'NOT EXECUTED';
-            }
-
-            $suiteResults[] = $aSuiteResult;
-        }
-
-        $final['name'] = 'OVERALL RESULT';
-        $final['counts'] = array();
-        $final['percent'] = 0;
-        $numExecutedTests = 0;
-
-        foreach ($suiteResults as $aSuiteResult) {
-            if (sizeof(@$aSuiteResult['counts'])) {
-                foreach ($aSuiteResult['counts'] as $key=>$aCount) {
-                    if (!isset($final['counts'][$key])) {
-                        $final['counts'][$key] = 0;
-                    }
-
-                    $final['counts'][$key] += $aCount;
-                }
-            }
-        }
-
-        if (isset($final['counts']['run'])) {
-            $per = 100/$final['counts']['run'];
-            $failed = ($per*$final['counts']['error'])+($per*$final['counts']['failure']);
-            $final['percent'] = round(100-$failed,2);
-        } else {
-            $final['percent'] = 0;
-        }
-
-        array_unshift($suiteResults,$final);
-
-        include 'PHPUnit/GUI/HTML.tpl';
-    }
-
-    function _prepareResult($result,$showPassed)
-    {
-        $ret = array();
-        $failures = $result->failures();
-
-        foreach($failures as $aFailure) {
-            $ret['failures'][] = $this->_prepareFailure($aFailure);
-        }
-
-        $errors = $result->errors();
-
-        foreach($errors as $aError) {
-            $ret['errors'][] = $this->_prepareErrors($aError);
-        }
-
-        if ($showPassed) {
-            $passed = $result->passedTests();
-
-            foreach($passed as $aPassed) {
-                $ret['passed'][] = $this->_preparePassedTests($aPassed);
-            }
-        }
-
-        return $ret;
-    }
-
-    function _prepareFailure($failure)
-    {
-        $test = $failure->failedTest();
-        $ret['testName'] = $test->getName();
-        $exception = $failure->thrownException();
-
-        // a serialized string starts with a 'character:decimal:{'
-        // if so we try to unserialize it
-        // this piece of the regular expression is for detecting a serialized
-        // type like 'a:3:' for an array with three element or an object i.e. 'O:12:"class":3'
-        $serialized = '(\w:\d+:(?:"[^"]+":\d+:)?\{.*\})';
-
-        // Spaces might make a diff, so we shall show them properly (since a
-        // user agent ignores them).
-        if (preg_match('/^(.*)expected ' . $serialized . ', actual ' . $serialized . '$/sU', $exception, $matches)) {
-            ob_start();
-            print_r(unserialize($matches[2]));
-            $ret['expected'] = htmlspecialchars($matches[1]) . "<pre>" . htmlspecialchars(rtrim(ob_get_contents())) . "</pre>";
-            // Improved compatibility, ob_clean() would be PHP >= 4.2.0 only.
-            ob_end_clean();
-
-            ob_start();
-            print_r(unserialize($matches[3]));
-            $ret['actual'] = htmlspecialchars($matches[1]) . "<pre>" . htmlspecialchars(rtrim(ob_get_contents())) . "</pre>";
-            ob_end_clean();
-        }
-
-        else if (preg_match('/^(.*)expected (.*), actual (.*)$/sU', $exception, $matches)) {
-            $ret['expected'] = nl2br(str_replace(" ", "&nbsp;", htmlspecialchars($matches[1] . $matches[2])));
-            $ret['actual'] = nl2br(str_replace(" ", "&nbsp;", htmlspecialchars($matches[1] . $matches[3])));
-        } else {
-            $ret['message'] = nl2br(str_replace(" ", "&nbsp;", htmlspecialchars($exception)));
-        }
-
-        return $ret;
-    }
-
-    function _preparePassedTests($passed)
-    {
-        $ret['testName'] = $passed->getName();
-        return $ret;
-    }
-
-    function _prepareError($error)
-    {
-        $ret['testName'] = $error->getName();
-        $ret['message'] = $error->toString();
-        return $ret;
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/GUI/HTML.tpl PHPUnit/GUI/HTML.tpl
--- PHPUnit/GUI/HTML.tpl	2005-01-07 08:34:05.000000000 +0100
+++ PHPUnit/GUI/HTML.tpl	1970-01-01 01:00:00.000000000 +0100
@@ -1,156 +0,0 @@
-<html>
-    <head>
-        <STYLE type="text/css">
-
-            body, td {
-                background-color: lightgrey;
-            }
-
-            table.outline, outlineFailure {
-                background-color: black;
-                border-width: 1px;
-            }
-
-            td {
-                padding: 2px;
-            }
-
-            th {
-                text-align: left;
-                color: white;
-                background-color: black;
-            }
-
-            .success {
-                background-color: lightgreen;
-            }
-
-            .failure {
-                background-color: orange;
-            }
-            .info {
-                padding: 2px;
-                color: orange;
-            }
-
-        </STYLE>
-    </head>
-    <body>
-        <form action="<?php echo $_SERVER['PHP_SELF'] ?>" method="post" name="optionsForm">
-            <table align="center" class="outline" width="70%">
-                <tr>
-                    <th colspan="10">
-                        Options
-                    </th>
-                </tr>
-                <tr>
-                    <td colspan="10">
-                        <input type="checkbox" onClick="unCheckAll()" name="allChecked">
-                        (un)check all
-                        &nbsp; &nbsp;
-                        show OK <input type="checkbox" name="showOK" <?php echo @$request['showOK']?'checked':''?>>
-                        &nbsp; &nbsp;
-                        <input type="submit" name="submitted" value="run tests">
-                    </td>
-                </tr>
-
-                <?php foreach($suiteResults as $aResult): ?>
-                    <tr>
-                        <th colspan="10">
-                            <input type="checkbox" name="<?php echo $aResult['name'] ?>" <?php echo @$request[$aResult['name']]?'checked':'' ?>>
-                            <?php echo $aResult['name'] ?>
-                            &nbsp;
-                            <?php if (isset($aResult['addInfo'])): ?>
-                                <font class="info"><?php echo @$aResult['addInfo'] ?></font>
-                            <?php endif ?>
-                        </th>
-                    </tr>
-
-                    <?php if(@$aResult['percent']): ?>
-                        <tr>
-                            <td colspan="10" nowrap="nowrap">
-                                <table style="width:100%; padding:2px;" cellspacing="0" cellspan="0" cellpadding="0">
-                                    <tr>
-                                        <td width="<?php echo $aResult['percent'] ?>%" class="success" align="center" style="padding:0;">
-                                            <?php echo $aResult['percent']?$aResult['percent'].'%':'' ?>
-                                        </td>
-                                        <td width="<?php echo 100-$aResult['percent'] ?>%" class="failure" align="center" style="padding:0;">
-                                            <?php echo (100-$aResult['percent'])?(100-$aResult['percent'].'%'):'' ?>
-                                        </td>
-                                    </tr>
-                                </table>
-                            </td>
-                        </tr>
-                    <?php endif ?>
-
-                    <?php if(@$aResult['counts']): ?>
-                        <tr>
-                            <td colspan="10">
-                                <?php foreach($aResult['counts'] as $aCount=>$value): ?>
-                                    <?php echo $aCount ?>s = <?php echo $value ?> &nbsp; &nbsp; &nbsp; &nbsp;
-                                <?php endforeach ?>
-                            </td>
-                        </tr>
-                    <?php endif ?>
-
-                    <?php if(isset($aResult['results']['failures']) && sizeof($aResult['results']['failures']))
-                        foreach($aResult['results']['failures'] as $aFailure): ?>
-                        <tr>
-                            <td class="failure"><?php echo $aFailure['testName'] ?></td>
-                            <td class="failure">
-                                <?php if(isset($aFailure['message']) && $aFailure['message']): ?>
-                                    <?php echo $aFailure['message'] ?>
-                                <?php else: ?>
-                                    <table class="outlineFailure">
-                                        <tr>
-                                            <td>expected</td>
-                                            <td><?php echo $aFailure['expected'] ?></td>
-                                        </tr>
-                                        <tr>
-                                            <td>actual</td>
-                                            <td><?php echo $aFailure['actual'] ?></td>
-                                        </tr>
-                                    </table>
-                                <?php endif ?>
-                            </td>
-                        </tr>
-                    <?php endforeach ?>
-
-                    <?php if(isset($aResult['results']['errors']) && sizeof($aResult['results']['errors']))
-                        foreach($aResult['results']['errors'] as $aError): ?>
-                        <tr>
-                            <td class="failure"><?php echo $aError['testName'] ?></td>
-                            <td class="failure">
-                                <?php echo $aError['message'] ?>
-                            </td>
-                        </tr>
-                    <?php endforeach ?>
-
-                    <?php if(isset($aResult['results']['passed']) && sizeof($aResult['results']['passed']))
-                        foreach($aResult['results']['passed'] as $aPassed): ?>
-                        <tr>
-                            <td class="success"><?php echo $aPassed['testName'] ?></td>
-                            <td class="success"><b>OK</b></td>
-                        </tr>
-                    <?php endforeach ?>
-
-                <?php endforeach ?>
-            </table>
-        </form>
-
-        <script>
-            var allSuiteNames = new Array();
-            <?php foreach($suiteResults as $aResult): ?>
-                allSuiteNames[allSuiteNames.length] = "<?php echo $aResult['name'] ?>";
-            <?php endforeach ?>
-            function unCheckAll()
-            {
-                _checked = document.optionsForm.allChecked.checked;
-                for (i=0;i<allSuiteNames.length;i++) {
-                    document.optionsForm[allSuiteNames[i]].checked = _checked;
-                }
-            }
-        </script>
-
-    </body>
-</html>
diff -NaurB PHPUnit/GUI/SetupDecorator.php PHPUnit/GUI/SetupDecorator.php
--- PHPUnit/GUI/SetupDecorator.php	2005-11-10 10:47:15.000000000 +0100
+++ PHPUnit/GUI/SetupDecorator.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,209 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Wolfram Kriesing <wolfram@kriesing.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: SetupDecorator.php,v 1.15 2005/11/10 09:47:15 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-/**
- * This decorator actually just adds the functionality to read the
- * test-suite classes from a given directory and instanciate them
- * automatically, use it as given in the example below.
- *
- * <code>
- * <?php
- * $gui = new PHPUnit_GUI_SetupDecorator(new PHPUnit_GUI_HTML());
- * $gui->getSuitesFromDir('/path/to/dir/tests','.*\.php$',array('index.php','sql.php'));
- * $gui->show();
- * ?>
- * </code>
- *
- * The example calls this class and tells it to:
- *
- *   - find all file under the directory /path/to/dir/tests
- *   - for files, which end with '.php' (this is a piece of a regexp, that's why the . is escaped)
- *   - and to exclude the files 'index.php' and 'sql.php'
- *   - and include all the files that are left in the tests.
- *
- * Given that the path (the first parameter) ends with 'tests' it will be assumed
- * that the classes are named tests_* where * is the directory plus the filename,
- * according to PEAR standards.
- *
- * So that:
- *
- *   - 'testMe.php' in the dir 'tests' bill be assumed to contain a class tests_testMe
- *   - '/moretests/aTest.php' should contain a class 'tests_moretests_aTest'
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Wolfram Kriesing <wolfram@kriesing.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_GUI_SetupDecorator
-{
-    /**
-    *
-    *
-    */
-    function PHPUnit_GUI_SetupDecorator(&$gui)
-    {
-        $this->_gui = &$gui;
-    }
-
-    /**
-    *   just forwarding the action to the decorated class.
-    *
-    */
-    function show($showPassed=TRUE)
-    {
-        $this->_gui->show($showPassed);
-    }
-
-    /**
-    * Setup test suites that can be found in the given directory
-    * Using the second parameter you can also choose a subsets of the files found
-    * in the given directory. I.e. only all the files that contain '_UnitTest_',
-    * in order to do this simply call it like this:
-    * <code>getSuitesFromDir($dir,'.*_UnitTest_.*')</code>.
-    * There you can already see that the pattern is built for the use within a regular expression.
-    *
-    * @param  string  the directory where to search for test-suite files
-    * @param  string  the pattern (a regexp) by which to find the files
-    * @param  array   an array of file names that shall be excluded
-    */
-    function getSuitesFromDir($dir, $filenamePattern = '', $exclude = array())
-    {
-        if ($dir{strlen($dir)-1} == DIRECTORY_SEPARATOR) {
-            $dir = substr($dir, 0, -1);
-        }
-
-        $files = $this->_getFiles(realpath($dir), $filenamePattern, $exclude, realpath($dir . '/..'));
-        asort($files);
-
-        foreach ($files as $className => $aFile) {
-            include_once($aFile);
-
-            if (class_exists($className)) {
-                $suites[] =& new PHPUnit_TestSuite($className);
-            } else {
-                trigger_error("$className could not be found in $dir$aFile!");
-            }
-        }
-
-        $this->_gui->addSuites($suites);
-    }
-
-    /**
-    * This method searches recursively through the directories
-    * to find all the files that shall be added to the be visible.
-    *
-    * @param  string  the path where find the files
-    * @param  srting  the string pattern by which to find the files
-    * @param  string  the file names to be excluded
-    * @param  string  the root directory, which serves as the prefix to the fully qualified filename
-    * @access private
-    */
-    function _getFiles($dir, $filenamePattern, $exclude, $rootDir)
-    {
-        $files = array();
-
-        if ($dp = opendir($dir)) {
-            while (FALSE !== ($file = readdir($dp))) {
-                $filename = $dir . DIRECTORY_SEPARATOR . $file;
-                $match    = TRUE;
-
-                if ($filenamePattern && !preg_match("~$filenamePattern~", $file)) {
-                    $match = FALSE;
-                }
-
-                if (sizeof($exclude)) {
-                    foreach ($exclude as $aExclude) {
-                        if (strpos($file, $aExclude) !== FALSE) {
-                            $match = FALSE;
-                            break;
-                        }
-                    }
-                }
-
-                if (is_file($filename) && $match) {
-                    $tmp = str_replace($rootDir, '', $filename);
-
-                    if (strpos($tmp, DIRECTORY_SEPARATOR) === 0) {
-                        $tmp = substr($tmp, 1);
-                    }
-
-                    if (strpos($tmp, '/') === 0) {
-                        $tmp = substr($tmp, 1);
-                    }
-
-                    $className = str_replace(DIRECTORY_SEPARATOR, '_', $tmp);
-                    $className = basename($className, '.php');
-
-                    $files[$className] = $filename;
-                }
-
-                if ($file != '.' && $file != '..' && is_dir($filename)) {
-                    $files = array_merge($files, $this->_getFiles($filename, $filenamePattern, $exclude, $rootDir));
-                }
-            }
-
-            closedir($dp);
-        }
-
-        return $files;
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/RepeatedTest.php PHPUnit/RepeatedTest.php
--- PHPUnit/RepeatedTest.php	2005-11-10 10:47:14.000000000 +0100
+++ PHPUnit/RepeatedTest.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,154 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: RepeatedTest.php,v 1.13 2005/11/10 09:47:14 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-require_once 'PHPUnit/TestDecorator.php';
-
-/**
- * A Decorator that runs a test repeatedly.
- *
- * Here is an example:
- *
- * <code>
- * <?php
- * require_once 'PHPUnit.php';
- * require_once 'PHPUnit/RepeatedTest.php';
- *
- * class MathTest extends PHPUnit_TestCase {
- *     var $fValue1;
- *     var $fValue2;
- *
- *     function MathTest($name) {
- *         $this->PHPUnit_TestCase($name);
- *     }
- *
- *     function setUp() {
- *         $this->fValue1 = 2;
- *         $this->fValue2 = 3;
- *     }
- *
- *     function testAdd() {
- *         $this->assertTrue($this->fValue1 + $this->fValue2 == 5);
- *     }
- * }
- *
- * $suite = new PHPUnit_TestSuite;
- *
- * $suite->addTest(
- *   new PHPUnit_RepeatedTest(
- *     new MathTest('testAdd'),
- *     10
- *   )
- * );
- *
- * $result = PHPUnit::run($suite);
- * print $result->toString();
- * ?>
- * </code>
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_RepeatedTest extends PHPUnit_TestDecorator {
-    /**
-     * @var    integer
-     * @access private
-     */
-    var $_timesRepeat = 1;
-
-    /**
-     * Constructor.
-     *
-     * @param  object
-     * @param  integer
-     * @access public
-     */
-    function PHPUnit_RepeatedTest(&$test, $timesRepeat = 1) {
-        $this->PHPUnit_TestDecorator($test);
-        $this->_timesRepeat = $timesRepeat;
-    }
-
-    /**
-     * Counts the number of test cases that
-     * will be run by this test.
-     *
-     * @return integer
-     * @access public
-     */
-    function countTestCases() {
-        return $this->_timesRepeat * $this->_test->countTestCases();
-    }
-
-    /**
-     * Runs the decorated test and collects the
-     * result in a TestResult.
-     *
-     * @param  object
-     * @access public
-     * @abstract
-     */
-    function run(&$result) {
-        for ($i = 0; $i < $this->_timesRepeat; $i++) {
-            $this->_test->run($result);
-        }
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/Skeleton.php PHPUnit/Skeleton.php
--- PHPUnit/Skeleton.php	2005-11-10 10:47:14.000000000 +0100
+++ PHPUnit/Skeleton.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,448 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Scott Mattocks <scott@crisscott.com>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: Skeleton.php,v 1.8 2005/11/10 09:47:14 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.1.0
- */
-
-/**
- * Class for creating a PHPUnit_TestCase skeleton file.
- *
- * This class will take a classname as a parameter on construction and will
- * create a PHP file that contains the skeleton of a PHPUnit_TestCase
- * subclass. The test case will contain a test foreach method of the class.
- * Methods of the parent class will, by default, be excluded from the test
- * class. Passing and optional construction parameter will include them.
- *
- * Example
- *
- *   <?php
- *   require_once 'PHPUnit/Skeleton.php';
- *   $ps = new PHPUnit_Skeleton('PHPUnit_Skeleton', 'PHPUnit/Skeleton.php');
- *
- *   // Generate the test class.
- *   // Default settings will not include any parent class methods, but
- *   // will include private methods.
- *   $ps->createTestClass();
- *
- *   // Write the new test class to file.
- *   // By default, code to run the test will be included.
- *   $ps->writeTestClass();
- *   ?>
- *
- * Now open the skeleton class and fill in the details.
- * If you run the test as is, all tests will fail and
- * you will see plenty of undefined constant errors.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Scott Mattocks <scott@crisscott.com>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.1.0
- */
-class PHPUnit_Skeleton {
-    /**
-     * Path to the class file to create a skeleton for.
-     * @var string
-     */
-    var $classPath;
-
-    /**
-     * The name of the class
-     * @var string
-     */
-    var $className;
-
-    /**
-     * Path to the configuration file needed by class to test.
-     * @var string
-     */
-    var $configFile;
-
-    /**
-     * Whether or not to include the methods of the parent class when testing.
-     * @var boolean
-     */
-    var $includeParents;
-
-    /**
-     * Whether or not to test private methods.
-     * @var boolean
-     */
-    var $includePrivate;
-
-    /**
-     * The test class that will be created.
-     * @var string
-     */
-    var $testClass;
-
-    /**
-     * Constructor. Sets the class members and check that the class
-     * to test is accessible.
-     *
-     * @access public
-     * @param  string  $className
-     * @param  string  $classPath
-     * @param  boolean $includeParents Wheter to include the parent's methods in the test.
-     * @return void
-     */
-    function PHPUnit_Skeleton($className, $classPath, $includeParents = FALSE, $includePrivate = TRUE) {
-        // Set up the members.
-        if (@is_readable($classPath)) {
-            $this->className = $className;
-            $this->classPath = $classPath;
-        } else {
-            $this->_handleErrors($classPath . ' is not readable. Cannot create test class.');
-        }
-
-        // Do we want to include parent methods?
-        $this->includeParents = $includeParents;
-
-        // Do we want to allow private methods?
-        $this->includePrivate = $includePrivate;
-    }
-
-    /**
-     * The class to test may require a special config file before it can be
-     * instantiated. This method lets you set that file.
-     *
-     * @access public
-     * @param  string $configPath
-     * @return void
-     */
-    function setConfigFile($configFile) {
-        // Check that the file is readable
-        if (@is_readable($configFile)) {
-            $this->configFile = $configFile;
-        } else {
-            $this->_handleErrors($configFile . ' is not readable. Cannot create test class.');
-        }
-    }
-
-    /**
-     * Create the code that will be the skeleton of the test case.
-     *
-     * The test case must have a clss definition, one var, a constructor
-     * setUp, tearDown, and methods. Optionally and by default the code
-     * to run the test is added when the class is written to file.
-     *
-     * @access public
-     * @param  none
-     * @return void
-     */
-    function createTestClass() {
-        // Instantiate the object.
-        if (isset($this->configFile)) {
-            require_once $this->configFile;
-        }
-
-        require_once $this->classPath;
-
-        // Get the methods.
-        $classMethods = get_class_methods($this->className);
-
-        // Remove the parent methods if needed.
-        if (!$this->includeParents) {
-            $parentMethods = get_class_methods(get_parent_class($this->className));
-
-            if (count($parentMethods)) {
-                $classMethods = array_diff($classMethods, $parentMethods);
-            }
-        }
-
-        // Create the class definition, constructor, setUp and tearDown.
-        $this->_createDefinition();
-        $this->_createConstructor();
-        $this->_createSetUpTearDown();
-
-        if (count($classMethods)) {
-            // Foreach method create a test case.
-            foreach ($classMethods as $method) {
-                // Unless it is the constructor.
-                if (strcasecmp($this->className, $method) !== 0) {
-                  // Check for private methods.
-                  if (!$this->includePrivate && strpos($method, '_') === 0) {
-                      continue;
-                  } else {
-                      $this->_createMethod($method);
-                  }
-                }
-            }
-        }
-
-        // Finis off the class.
-        $this->_finishClass();
-    }
-
-    /**
-     * Create the class definition.
-     *
-     * The definition consist of a header comment, require statment
-     * for getting the PHPUnit file, the actual class definition,
-     * and the definition of the class member variable.
-     *
-     * All of the code needed for the new class is stored in the
-     * testClass member.
-     *
-     * @access private
-     * @param  none
-     * @return void
-     */
-    function _createDefinition() {
-        // Create header comment.
-        $this->testClass =
-          "/**\n" .
-          " * PHPUnit test case for " . $this->className . "\n" .
-          " * \n" .
-          " * The method skeletons below need to be filled in with \n" .
-          " * real data so that the tests will run correctly. Replace \n" .
-          " * all EXPECTED_VAL and PARAM strings with real data. \n" .
-          " * \n" .
-          " * Created with PHPUnit_Skeleton on " . date('Y-m-d') . "\n" .
-          " */\n";
-
-        // Add the require statements.
-        $this->testClass .= "require_once 'PHPUnit.php';\n";
-
-        // Add the class definition and variable definition.
-        $this->testClass .=
-          "class " . $this->className . "Test extends PHPUnit_TestCase {\n\n" .
-          "    var \$" . $this->className . ";\n\n";
-    }
-
-    /**
-     * Create the class constructor. (PHP4 style)
-     *
-     * The constructor simply calls the PHPUnit_TestCase method.
-     * This code is taken from the PHPUnit documentation.
-     *
-     * All of the code needed for the new class is stored in the
-     * testClass member.
-     *
-     * @access private
-     * @param  none
-     * @return void
-     */
-    function _createConstructor() {
-        // Create the test class constructor.
-        $this->testClass.=
-          "    function " . $this->className . "Test(\$name)\n" .
-          "    {\n" .
-          "        \$this->PHPUnit_TestCase(\$name);\n" .
-          "    }\n\n";
-    }
-
-    /**
-     * Create setUp and tearDown methods.
-     *
-     * The setUp method creates the instance of the object to test.
-     * The tearDown method releases the instance.
-     * This code is taken from the PHPUnit documentation.
-     *
-     * All of the code needed for the new class is stored in the
-     * testClass member.
-     *
-     * @access private
-     * @param  none
-     * @return void
-     */
-    function _createSetUpTearDown() {
-        // Create the setUp method.
-        $this->testClass .=
-          "    function setUp()\n" .
-          "    {\n";
-
-        if (isset($this->configFile)) {
-            $this->testClass .=
-            "        require_once '" . $this->configFile . "';\n";
-        }
-
-        $this->testClass .=
-          "        require_once '" . $this->classPath . "';\n" .
-          "        \$this->" . $this->className . " =& new " . $this->className . "(PARAM);\n" .
-          "    }\n\n";
-
-        // Create the tearDown method.
-        $this->testClass .=
-          "    function tearDown()\n" .
-          "    {\n" .
-          "        unset(\$this->" . $this->className . ");\n" .
-          "    }\n\n";
-    }
-
-    /**
-     * Create a basic skeleton for test methods.
-     *
-     * This code is taken from the PHPUnit documentation.
-     *
-     * All of the code needed for the new class is stored in the
-     * testClass member.
-     *
-     * @access private
-     * @param  none
-     * @return void
-     */
-    function _createMethod($methodName) {
-        // Create a test method.
-        $this->testClass .=
-          "    function test" . $methodName . "()\n" .
-          "    {\n" .
-          "        \$result   = \$this->" . $this->className . "->" . $methodName . "(PARAM);\n" .
-          "        \$expected = EXPECTED_VAL;\n" .
-          "        \$this->assertEquals(\$expected, \$result);\n" .
-          "    }\n\n";
-    }
-
-    /**
-     * Add the closing brace needed for a proper class definition.
-     *
-     * All of the code needed for the new class is stored in the
-     * testClass member.
-     *
-     * @access private
-     * @param  none
-     * @return void
-     */
-    function _finishClass() {
-        // Close off the class.
-        $this->testClass.= "}\n";
-    }
-
-    /**
-     * Create the code that will actually run the test.
-     *
-     * This code is added by default so that the test can be run
-     * just by running the file. To have it not added pass false
-     * as the second parameter to the writeTestClass method.
-     * This code is taken from the PHPUnit documentation.
-     *
-     * All of the code needed for the new class is stored in the
-     * testClass member.
-     *
-     * @access private
-     * @param  none
-     * @return void
-     */
-    function _createTest() {
-        // Create a call to the test.
-        $test =
-          "// Running the test.\n" .
-          "\$suite  = new PHPUnit_TestSuite('" . $this->className . "Test');\n" .
-          "\$result = PHPUnit::run(\$suite);\n" .
-          "echo \$result->toString();\n";
-
-        return $test;
-    }
-
-    /**
-     * Write the test class to file.
-     *
-     * This will write the test class created using the createTestClass
-     * method to a file called <className>Test.php. By default the file
-     * is written to the current directory and will have code to run
-     * the test appended to the bottom of the file.
-     *
-     * @access public
-     * @param  string  $destination The directory to write the file to.
-     * @param  boolean $addTest     Wheter to add the test running code.
-     * @return void
-     */
-    function writeTestClass($destination = './', $addTest = TRUE) {
-        // Check for something to write to file.
-        if (!isset($this->testClass)) {
-            $this->_handleErrors('Noting to write.', PHPUS_WARNING);
-            return;
-        }
-
-        // Open the destination file.
-        $fp = fopen($destination . $this->className . 'Test.php', 'w');
-        fwrite($fp, "<?php\n");
-
-        // Write the test class.
-        fwrite($fp, $this->testClass);
-
-        // Add the call to test the class in the file if we were asked to.
-        if ($addTest) {
-            fwrite($fp, $this->_createTest());
-        }
-
-        // Close the file.
-        fwrite($fp, "?>\n");
-        fclose($fp);
-    }
-
-    /**
-     * Error handler.
-     *
-     * This method should be rewritten to use the prefered error
-     * handling method. (PEAR_ErrorStack)
-     *
-     * @access private
-     * @param  string  $message The error message.
-     * @param  integer $type    An indication of the severity of the error.
-     * @return void             Code may cause PHP to exit.
-     */
-    function _handleErrors($message, $type = E_USER_ERROR) {
-        // For now just echo the message.
-        echo $message;
-
-        // Check to see if we should quit.
-        if ($type == E_USER_ERROR) {
-            exit;
-        }
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/TestCase.php PHPUnit/TestCase.php
--- PHPUnit/TestCase.php	2005-11-10 10:47:14.000000000 +0100
+++ PHPUnit/TestCase.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,293 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: TestCase.php,v 1.21 2005/11/10 09:47:14 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-require_once 'PHPUnit/Assert.php';
-require_once 'PHPUnit/TestResult.php';
-
-/**
- * A TestCase defines the fixture to run multiple tests.
- *
- * To define a TestCase
- *
- *   1) Implement a subclass of PHPUnit_TestCase.
- *   2) Define instance variables that store the state of the fixture.
- *   3) Initialize the fixture state by overriding setUp().
- *   4) Clean-up after a test by overriding tearDown().
- *
- * Each test runs in its own fixture so there can be no side effects
- * among test runs.
- *
- * Here is an example:
- *
- * <code>
- * <?php
- * class MathTest extends PHPUnit_TestCase {
- *     var $fValue1;
- *     var $fValue2;
- *
- *     function MathTest($name) {
- *         $this->PHPUnit_TestCase($name);
- *     }
- *
- *     function setUp() {
- *         $this->fValue1 = 2;
- *         $this->fValue2 = 3;
- *     }
- * }
- * ?>
- * </code>
- *
- * For each test implement a method which interacts with the fixture.
- * Verify the expected results with assertions specified by calling
- * assert with a boolean.
- *
- * <code>
- * <?php
- * function testPass() {
- *     $this->assertTrue($this->fValue1 + $this->fValue2 == 5);
- * }
- * ?>
- * </code>
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_TestCase extends PHPUnit_Assert {
-    /**
-     * @var    boolean
-     * @access private
-     */
-    var $_failed = FALSE;
-
-    /**
-     * The name of the test case.
-     *
-     * @var    string
-     * @access private
-     */
-    var $_name = '';
-
-    /**
-     * PHPUnit_TestResult object
-     *
-     * @var    object
-     * @access private
-     */
-    var $_result;
-
-    /**
-     * Constructs a test case with the given name.
-     *
-     * @param  string
-     * @access public
-     */
-    function PHPUnit_TestCase($name = FALSE) {
-        if ($name !== FALSE) {
-            $this->setName($name);
-        }
-    }
-
-    /**
-     * Counts the number of test cases executed by run(TestResult result).
-     *
-     * @return integer
-     * @access public
-     */
-    function countTestCases() {
-        return 1;
-    }
-
-    /**
-     * Gets the name of a TestCase.
-     *
-     * @return string
-     * @access public
-     */
-    function getName() {
-        return $this->_name;
-    }
-
-    /**
-     * Runs the test case and collects the results in a given TestResult object.
-     *
-     * @param  object
-     * @return object
-     * @access public
-     */
-    function run(&$result) {
-        $this->_result = &$result;
-        $this->_result->run($this);
-
-        return $this->_result;
-    }
-
-    /**
-     * Runs the bare test sequence.
-     *
-     * @access public
-     */
-    function runBare() {
-        $this->setUp();
-        $this->runTest();
-        $this->tearDown();
-        $this->pass();
-    }
-
-    /**
-     * Override to run the test and assert its state.
-     *
-     * @access protected
-     */
-    function runTest() {
-        call_user_func(
-          array(
-            &$this,
-            $this->_name
-          )
-        );
-    }
-
-    /**
-     * Sets the name of a TestCase.
-     *
-     * @param  string
-     * @access public
-     */
-    function setName($name) {
-        $this->_name = $name;
-    }
-
-    /**
-     * Returns a string representation of the test case.
-     *
-     * @return string
-     * @access public
-     */
-    function toString() {
-        return '';
-    }
-
-    /**
-     * Creates a default TestResult object.
-     *
-     * @return object
-     * @access protected
-     */
-    function &createResult() {
-        return new PHPUnit_TestResult;
-    }
-
-    /**
-     * Fails a test with the given message.
-     *
-     * @param  string
-     * @access protected
-     */
-    function fail($message = '') {
-        if (function_exists('debug_backtrace')) {
-            $trace = debug_backtrace();
-
-            if (isset($trace['1']['file'])) {
-                $message = sprintf(
-                  "%s in %s:%s",
-
-                  $message,
-                  $trace['1']['file'],
-                  $trace['1']['line']
-                );
-            }
-        }
-
-        $this->_result->addFailure($this, $message);
-        $this->_failed = TRUE;
-    }
-
-    /**
-     * Passes a test.
-     *
-     * @access protected
-     */
-    function pass() {
-        if (!$this->_failed) {
-            $this->_result->addPassedTest($this);
-        }
-    }
-
-    /**
-     * Sets up the fixture, for example, open a network connection.
-     * This method is called before a test is executed.
-     *
-     * @access protected
-     * @abstract
-     */
-    function setUp() { /* abstract */ }
-
-    /**
-     * Tears down the fixture, for example, close a network connection.
-     * This method is called after a test is executed.
-     *
-     * @access protected
-     * @abstract
-     */
-    function tearDown() { /* abstract */ }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/TestDecorator.php PHPUnit/TestDecorator.php
--- PHPUnit/TestDecorator.php	2005-11-10 10:47:14.000000000 +0100
+++ PHPUnit/TestDecorator.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,156 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: TestDecorator.php,v 1.17 2005/11/10 09:47:14 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-require_once 'PHPUnit/TestCase.php';
-require_once 'PHPUnit/TestSuite.php';
-
-if (!function_exists('is_a')) {
-    require_once 'PHP/Compat/Function/is_a.php';
-}
-
-/**
- * A Decorator for Tests.
- *
- * Use TestDecorator as the base class for defining new
- * test decorators. Test decorator subclasses can be introduced
- * to add behaviour before or after a test is run.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_TestDecorator {
-    /**
-     * The Test to be decorated.
-     *
-     * @var    object
-     * @access protected
-     */
-    var $_test = NULL;
-
-    /**
-     * Constructor.
-     *
-     * @param  object
-     * @access public
-     */
-    function PHPUnit_TestDecorator(&$test) {
-        if (is_object($test) &&
-            (is_a($test, 'PHPUnit_TestCase') ||
-             is_a($test, 'PHPUnit_TestSuite'))) {
-
-            $this->_test = &$test;
-        }
-    }
-
-    /**
-     * Runs the test and collects the
-     * result in a TestResult.
-     *
-     * @param  object
-     * @access public
-     */
-    function basicRun(&$result) {
-        $this->_test->run($result);
-    }
-
-    /**
-     * Counts the number of test cases that
-     * will be run by this test.
-     *
-     * @return integer
-     * @access public
-     */
-    function countTestCases() {
-        return $this->_test->countTestCases();
-    }
-
-    /**
-     * Returns the test to be run.
-     *
-     * @return object
-     * @access public
-     */
-    function &getTest() {
-        return $this->_test;
-    }
-
-    /**
-     * Runs the decorated test and collects the
-     * result in a TestResult.
-     *
-     * @param  object
-     * @access public
-     * @abstract
-     */
-    function run(&$result) { /* abstract */ }
-
-    /**
-     * Returns a string representation of the test.
-     *
-     * @return string
-     * @access public
-     */
-    function toString() {
-        return $this->_test->toString();
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/TestFailure.php PHPUnit/TestFailure.php
--- PHPUnit/TestFailure.php	2005-11-10 10:47:14.000000000 +0100
+++ PHPUnit/TestFailure.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,130 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: TestFailure.php,v 1.13 2005/11/10 09:47:14 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-/**
- * A TestFailure collects a failed test together with the caught exception.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_TestFailure {
-    /**
-     * @var    object
-     * @access private
-     */
-    var $_failedTest;
-
-    /**
-     * @var    string
-     * @access private
-     */
-    var $_thrownException;
-
-    /**
-     * Constructs a TestFailure with the given test and exception.
-     *
-     * @param  object
-     * @param  string
-     * @access public
-     */
-    function PHPUnit_TestFailure(&$failedTest, &$thrownException) {
-        $this->_failedTest      = &$failedTest;
-        $this->_thrownException = &$thrownException;
-    }
-
-    /**
-     * Gets the failed test.
-     *
-     * @return object
-     * @access public
-     */
-    function &failedTest() {
-        return $this->_failedTest;
-    }
-
-    /**
-     * Gets the thrown exception.
-     *
-     * @return object
-     * @access public
-     */
-    function &thrownException() {
-        return $this->_thrownException;
-    }
-
-    /**
-     * Returns a short description of the failure.
-     *
-     * @return string
-     * @access public
-     */
-    function toString() {
-        return sprintf(
-          "TestCase %s->%s() failed: %s\n",
-
-          get_class($this->_failedTest),
-          $this->_failedTest->getName(),
-          $this->_thrownException
-        );
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/TestListener.php PHPUnit/TestListener.php
--- PHPUnit/TestListener.php	2005-11-10 10:47:15.000000000 +0100
+++ PHPUnit/TestListener.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,162 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: TestListener.php,v 1.12 2005/11/10 09:47:15 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-/**
- * A Listener for test progress.
- *
- * Here is an example:
- *
- * <code>
- * <?php
- * require_once 'PHPUnit.php';
- * require_once 'PHPUnit/TestListener.php';
- *
- * class MathTest extends PHPUnit_TestCase {
- *     var $fValue1;
- *     var $fValue2;
- *
- *     function MathTest($name) {
- *         $this->PHPUnit_TestCase($name);
- *     }
- *
- *     function setUp() {
- *         $this->fValue1 = 2;
- *         $this->fValue2 = 3;
- *     }
- *
- *     function testAdd() {
- *         $this->assertTrue($this->fValue1 + $this->fValue2 == 4);
- *     }
- * }
- *
- * class MyListener extends PHPUnit_TestListener {
- *     function addError(&$test, &$t) {
- *         print "MyListener::addError() called.\n";
- *     }
- *
- *     function addFailure(&$test, &$t) {
- *         print "MyListener::addFailure() called.\n";
- *     }
- *
- *     function endTest(&$test) {
- *         print "MyListener::endTest() called.\n";
- *     }
- *
- *     function startTest(&$test) {
- *         print "MyListener::startTest() called.\n";
- *     }
- * }
- *
- * $suite = new PHPUnit_TestSuite;
- * $suite->addTest(new MathTest('testAdd'));
- *
- * $result = new PHPUnit_TestResult;
- * $result->addListener(new MyListener);
- *
- * $suite->run($result);
- * print $result->toString();
- * ?>
- * </code>
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_TestListener {
-    /**
-     * An error occurred.
-     *
-     * @param  object
-     * @param  object
-     * @access public
-     * @abstract
-     */
-    function addError(&$test, &$t) { /*abstract */ }
-
-    /**
-     * A failure occurred.
-     *
-     * @param  object
-     * @param  object
-     * @access public
-     * @abstract
-     */
-    function addFailure(&$test, &$t) { /*abstract */ }
-
-    /**
-     * A test ended.
-     *
-     * @param  object
-     * @access public
-     * @abstract
-     */
-    function endTest(&$test) { /*abstract */ }
-
-    /**
-     * A test started.
-     *
-     * @param  object
-     * @access public
-     * @abstract
-     */
-    function startTest(&$test) { /*abstract */ }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/TestResult.php PHPUnit/TestResult.php
--- PHPUnit/TestResult.php	2005-11-10 10:47:15.000000000 +0100
+++ PHPUnit/TestResult.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,347 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: TestResult.php,v 1.18 2005/11/10 09:47:15 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-require_once 'PHPUnit/TestFailure.php';
-require_once 'PHPUnit/TestListener.php';
-
-if (!function_exists('is_a')) {
-    require_once 'PHP/Compat/Function/is_a.php';
-}
-
-/**
- * A TestResult collects the results of executing a test case.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_TestResult {
-    /**
-     * @var    array
-     * @access protected
-     */
-    var $_errors = array();
-
-    /**
-     * @var    array
-     * @access protected
-     */
-    var $_failures = array();
-
-     /**
-     * @var    array
-     * @access protected
-     */
-    var $_listeners = array();
-
-    /**
-     * @var    array
-     * @access protected
-     */
-    var $_passedTests = array();
-
-    /**
-     * @var    integer
-     * @access protected
-     */
-    var $_runTests = 0;
-
-    /**
-     * @var    boolean
-     * @access private
-     */
-    var $_stop = FALSE;
-
-    /**
-     * Adds an error to the list of errors.
-     * The passed in exception caused the error.
-     *
-     * @param  object
-     * @param  object
-     * @access public
-     */
-    function addError(&$test, &$t) {
-        $this->_errors[] = new PHPUnit_TestFailure($test, $t);
-
-        for ($i = 0; $i < sizeof($this->_listeners); $i++) {
-            $this->_listeners[$i]->addError($test, $t);
-        }
-    }
-
-    /**
-     * Adds a failure to the list of failures.
-     * The passed in exception caused the failure.
-     *
-     * @param  object
-     * @param  object
-     * @access public
-     */
-    function addFailure(&$test, &$t) {
-        $this->_failures[] = new PHPUnit_TestFailure($test, $t);
-
-        for ($i = 0; $i < sizeof($this->_listeners); $i++) {
-            $this->_listeners[$i]->addFailure($test, $t);
-        }
-    }
-
-    /**
-     * Registers a TestListener.
-     *
-     * @param  object
-     * @access public
-     */
-    function addListener(&$listener) {
-        if (is_object($listener) &&
-            is_a($listener, 'PHPUnit_TestListener')) {
-            $this->_listeners[] = &$listener;
-        }
-    }
-
-    /**
-     * Adds a passed test to the list of passed tests.
-     *
-     * @param  object
-     * @access public
-     */
-    function addPassedTest(&$test) {
-        $this->_passedTests[] = &$test;
-    }
-
-    /**
-     * Informs the result that a test was completed.
-     *
-     * @param  object
-     * @access public
-     */
-    function endTest(&$test) {
-        for ($i = 0; $i < sizeof($this->_listeners); $i++) {
-            $this->_listeners[$i]->endTest($test);
-        }
-    }
-
-    /**
-     * Gets the number of detected errors.
-     *
-     * @return integer
-     * @access public
-     */
-    function errorCount() {
-        return sizeof($this->_errors);
-    }
-
-    /**
-     * Returns an Enumeration for the errors.
-     *
-     * @return array
-     * @access public
-     */
-    function &errors() {
-        return $this->_errors;
-    }
-
-    /**
-     * Gets the number of detected failures.
-     *
-     * @return integer
-     * @access public
-     */
-    function failureCount() {
-        return sizeof($this->_failures);
-    }
-
-    /**
-     * Returns an Enumeration for the failures.
-     *
-     * @return array
-     * @access public
-     */
-    function &failures() {
-        return $this->_failures;
-    }
-
-    /**
-     * Returns an Enumeration for the passed tests.
-     *
-     * @return array
-     * @access public
-     */
-    function &passedTests() {
-        return $this->_passedTests;
-    }
-
-    /**
-     * Unregisters a TestListener.
-     * This requires the Zend Engine 2 (to work properly).
-     *
-     * @param  object
-     * @access public
-     */
-    function removeListener(&$listener) {
-        for ($i = 0; $i < sizeof($this->_listeners); $i++) {
-            if ($this->_listeners[$i] === $listener) {
-                unset($this->_listeners[$i]);
-            }
-        }
-    }
-
-    /**
-     * Runs a TestCase.
-     *
-     * @param  object
-     * @access public
-     */
-    function run(&$test) {
-        $this->startTest($test);
-        $this->_runTests++;
-        $test->runBare();
-        $this->endTest($test);
-    }
-
-    /**
-     * Gets the number of run tests.
-     *
-     * @return integer
-     * @access public
-     */
-    function runCount() {
-        return $this->_runTests;
-    }
-
-    /**
-     * Checks whether the test run should stop.
-     *
-     * @access public
-     */
-    function shouldStop() {
-        return $this->_stop;
-    }
-
-    /**
-     * Informs the result that a test will be started.
-     *
-     * @param  object
-     * @access public
-     */
-    function startTest(&$test) {
-        for ($i = 0; $i < sizeof($this->_listeners); $i++) {
-            $this->_listeners[$i]->startTest($test);
-        }
-    }
-
-    /**
-     * Marks that the test run should stop.
-     *
-     * @access public
-     */
-    function stop() {
-        $this->_stop = TRUE;
-    }
-
-    /**
-     * Returns a HTML representation of the test result.
-     *
-     * @return string
-     * @access public
-     */
-    function toHTML() {
-        return '<pre>' . htmlspecialchars($this->toString()) . '</pre>';
-    }
-
-    /**
-     * Returns a text representation of the test result.
-     *
-     * @return string
-     * @access public
-     */
-    function toString() {
-        $result = '';
-
-        foreach ($this->_passedTests as $passedTest) {
-            $result .= sprintf(
-              "TestCase %s->%s() passed\n",
-
-              get_class($passedTest),
-              $passedTest->getName()
-            );
-        }
-
-        foreach ($this->_failures as $failedTest) {
-            $result .= $failedTest->toString();
-        }
-
-        return $result;
-    }
-
-    /**
-     * Returns whether the entire test was successful or not.
-     *
-     * @return boolean
-     * @access public
-     */
-    function wasSuccessful() {
-        if (empty($this->_errors) && empty($this->_failures)) {
-            return TRUE;
-        } else {
-            return FALSE;
-        }
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit/TestSuite.php PHPUnit/TestSuite.php
--- PHPUnit/TestSuite.php	2005-11-10 10:47:15.000000000 +0100
+++ PHPUnit/TestSuite.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,262 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: TestSuite.php,v 1.17 2005/11/10 09:47:15 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-require_once 'PHPUnit/TestCase.php';
-
-/**
- * A TestSuite is a Composite of Tests. It runs a collection of test cases.
- *
- * Here is an example using the dynamic test definition.
- *
- * <code>
- * <?php
- * $suite = new PHPUnit_TestSuite();
- * $suite->addTest(new MathTest('testPass'));
- * ?>
- * </code>
- *
- * Alternatively, a TestSuite can extract the tests to be run automatically.
- * To do so you pass the classname of your TestCase class to the TestSuite
- * constructor.
- *
- * <code>
- * <?php
- * $suite = new TestSuite('classname');
- * ?>
- * </code>
- *
- * This constructor creates a suite with all the methods starting with
- * "test" that take no arguments.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit_TestSuite {
-    /**
-     * The name of the test suite.
-     *
-     * @var    string
-     * @access private
-     */
-    var $_name = '';
-
-    /**
-     * The tests in the test suite.
-     *
-     * @var    array
-     * @access private
-     */
-    var $_tests = array();
-
-    /**
-     * Constructs a TestSuite.
-     *
-     * @param  mixed
-     * @access public
-     */
-    function PHPUnit_TestSuite($test = FALSE) {
-        if ($test !== FALSE) {
-            $this->setName($test);
-            $this->addTestSuite($test);
-        }
-    }
-
-    /**
-     * Adds a test to the suite.
-     *
-     * @param  object
-     * @access public
-     */
-    function addTest(&$test) {
-        $this->_tests[] = &$test;
-    }
-
-    /**
-     * Adds the tests from the given class to the suite.
-     *
-     * @param  string
-     * @access public
-     */
-    function addTestSuite($testClass) {
-        if (class_exists($testClass)) {
-            $methods       = get_class_methods($testClass);
-            $parentClasses = array(strtolower($testClass));
-            $parentClass   = $testClass;
-
-            while(is_string($parentClass = get_parent_class($parentClass))) {
-                $parentClasses[] = $parentClass;
-            }
-
-            foreach ($methods as $method) {
-                if (substr($method, 0, 4) == 'test' &&
-                    !in_array($method, $parentClasses)) {
-                    $this->addTest(new $testClass($method));
-                }
-            }
-        }
-    }
-
-    /**
-     * Counts the number of test cases that will be run by this test.
-     *
-     * @return integer
-     * @access public
-     */
-    function countTestCases() {
-        $count = 0;
-
-        foreach ($this->_tests as $test) {
-            $count += $test->countTestCases();
-        }
-
-        return $count;
-    }
-
-    /**
-     * Returns the name of the suite.
-     *
-     * @return string
-     * @access public
-     */
-    function getName() {
-        return $this->_name;
-    }
-
-    /**
-     * Runs the tests and collects their result in a TestResult.
-     *
-     * @param  object
-     * @access public
-     */
-    function run(&$result) {
-        for ($i = 0; $i < sizeof($this->_tests) && !$result->shouldStop(); $i++) {
-            $this->_tests[$i]->run($result);
-        }
-    }
-
-    /**
-     * Runs a test.
-     *
-     * @param  object
-     * @param  object
-     * @access public
-     */
-    function runTest(&$test, &$result) {
-        $test->run($result);
-    }
-
-    /**
-     * Sets the name of the suite.
-     *
-     * @param  string
-     * @access public
-     */
-    function setName($name) {
-        $this->_name = $name;
-    }
-
-    /**
-     * Returns the test at the given index.
-     *
-     * @param  integer
-     * @return object
-     * @access public
-     */
-    function &testAt($index) {
-        if (isset($this->_tests[$index])) {
-            return $this->_tests[$index];
-        } else {
-            return FALSE;
-        }
-    }
-
-    /**
-     * Returns the number of tests in this suite.
-     *
-     * @return integer
-     * @access public
-     */
-    function testCount() {
-        return sizeof($this->_tests);
-    }
-
-    /**
-     * Returns the tests as an enumeration.
-     *
-     * @return array
-     * @access public
-     */
-    function &tests() {
-        return $this->_tests;
-    }
-
-    /**
-     * Returns a string representation of the test suite.
-     *
-     * @return string
-     * @access public
-     */
-    function toString() {
-        return '';
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB PHPUnit.php PHPUnit.php
--- PHPUnit.php	2005-11-10 10:47:11.000000000 +0100
+++ PHPUnit.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,132 +0,0 @@
-<?php
-/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */
-
-/**
- * PHP Version 4
- *
- * Copyright (c) 2002-2005, Sebastian Bergmann <sb@sebastian-bergmann.de>.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- * 
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *
- *   * Neither the name of Sebastian Bergmann nor the names of his
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    CVS: $Id: PHPUnit.php,v 1.17 2005/11/10 09:47:11 sebastian Exp $
- * @link       http://pear.php.net/package/PHPUnit
- * @since      File available since Release 1.0.0
- */
-
-require_once 'PHPUnit/TestCase.php';
-require_once 'PHPUnit/TestResult.php';
-require_once 'PHPUnit/TestSuite.php';
-
-/**
- * PHPUnit runs a TestSuite and returns a TestResult object.
- *
- * Here is an example:
- *
- * <code>
- * <?php
- * require_once 'PHPUnit.php';
- *
- * class MathTest extends PHPUnit_TestCase {
- *     var $fValue1;
- *     var $fValue2;
- *
- *     function MathTest($name) {
- *       $this->PHPUnit_TestCase($name);
- *     }
- *
- *     function setUp() {
- *       $this->fValue1 = 2;
- *       $this->fValue2 = 3;
- *     }
- *
- *     function testAdd() {
- *       $this->assertTrue($this->fValue1 + $this->fValue2 == 5);
- *     }
- * }
- *
- * $suite = new PHPUnit_TestSuite();
- * $suite->addTest(new MathTest('testAdd'));
- *
- * $result = PHPUnit::run($suite);
- * print $result->toHTML();
- * ?>
- * </code>
- *
- * Alternatively, you can pass a class name to the PHPUnit_TestSuite()
- * constructor and let it automatically add all methods of that class
- * that start with 'test' to the suite:
- *
- * <code>
- * <?php
- * $suite  = new PHPUnit_TestSuite('MathTest');
- * $result = PHPUnit::run($suite);
- * print $result->toHTML();
- * ?>
- * </code>
- *
- * @category   Testing
- * @package    PHPUnit
- * @author     Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @copyright  2002-2005 Sebastian Bergmann <sb@sebastian-bergmann.de>
- * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
- * @version    Release: @package_version@
- * @link       http://pear.php.net/package/PHPUnit
- * @since      Class available since Release 1.0.0
- */
-class PHPUnit {
-    /**
-     * Runs a test(suite).
-     *
-     * @param  mixed
-     * @return PHPUnit_TestResult
-     * @access public
-     */
-    function &run(&$suite) {
-        $result = new PHPUnit_TestResult();
-        $suite->run($result);
-
-        return $result;
-    }
-}
-
-/*
- * Local variables:
- * tab-width: 4
- * c-basic-offset: 4
- * c-hanging-comment-ender-p: nil
- * End:
- */
-?>
diff -NaurB Tests/Auth/OpenID/BigMath.php Tests/Auth/OpenID/BigMath.php
--- Tests/Auth/OpenID/BigMath.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/BigMath.php	2009-12-03 12:20:49.000000000 +0100
@@ -160,7 +160,7 @@
 
     function _addB64Tests()
     {
-        $lib =& Auth_OpenID_getMathLib();
+        $lib = Auth_OpenID_getMathLib();
         $count = defined('Tests_Auth_OpenID_thorough') ? -1 : 2;
         $data = $this->_parseBase64Data();
         foreach ($data as $b64 => $num_s) {
@@ -232,4 +232,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Tests/Auth/OpenID/Consumer.php Tests/Auth/OpenID/Consumer.php
--- Tests/Auth/OpenID/Consumer.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/Consumer.php	2009-12-03 11:48:43.000000000 +0100
@@ -1696,12 +1696,12 @@
     {
         $html = $this->request->htmlMarkup('http://realm.com/',
                                            'http://realm.com/return_to');
-        $this->assertTrue(substr($html,"<html>") !== false);
-        $this->assertTrue(substr($html,"</html>") !== false);
-        $this->assertTrue(substr($html,"<body onload") !== false);
-        $this->assertTrue(substr($html,"</body>") !== false);
-        $this->assertTrue(substr($html,"<form") !== false);
-        $this->assertTrue(substr($html,"</form>") !== false);
+        $this->assertTrue(strpos($html,"<html>") !== false);
+        $this->assertTrue(strpos($html,"</html>") !== false);
+        $this->assertTrue(strpos($html,"<body onload") !== false);
+        $this->assertTrue(strpos($html,"</body>") !== false);
+        $this->assertTrue(strpos($html,"<form") !== false);
+        $this->assertTrue(strpos($html,"</form>") !== false);
     }
 }
 
@@ -1820,9 +1820,9 @@
         $this->store = null;
         $this->session = new Auth_Yadis_PHPSession();
         $cls = $this->consumerClass;
-        $this->consumer =& new $cls($this->store, &$this->session);
-        $this->consumer->consumer =& new _StubConsumer();
-        $this->discovery =& new Auth_Yadis_Discovery(&$this->session,
+        $this->consumer = new $cls($this->store, $this->session);
+        $this->consumer->consumer = new _StubConsumer();
+        $this->discovery = new Auth_Yadis_Discovery($this->session,
                                          $this->claimed_id,
                                          $this->consumer->session_key_prefix);
     }
@@ -1851,9 +1851,9 @@
         $this->endpoint->claimed_id = $this->claimed_id;
         $this->store = null;
         $this->session = new Auth_Yadis_PHPSession();
-        $this->consumer =& new Auth_OpenID_Consumer($this->store, $this->session);
-        $this->consumer->consumer =& new _StubConsumer();
-        $this->discovery =& new Auth_Yadis_Discovery(&$this->session,
+        $this->consumer = new Auth_OpenID_Consumer($this->store, $this->session);
+        $this->consumer->consumer = new _StubConsumer();
+        $this->discovery = new Auth_Yadis_Discovery($this->session,
                                          $this->claimed_id,
                                          $this->consumer->session_key_prefix);
     }
@@ -2388,7 +2388,7 @@
         $this->server_dh = new Auth_OpenID_DiffieHellman(100389557, 2);
         $this->consumer_dh = new Auth_OpenID_DiffieHellman(100389557, 2);
 
-        $lib =& Auth_OpenID_getMathLib();
+        $lib = Auth_OpenID_getMathLib();
 
         $cls = $this->session_cls;
         $this->consumer_session = new $cls($this->consumer_dh);
diff -NaurB Tests/Auth/OpenID/DiffieHellman.php Tests/Auth/OpenID/DiffieHellman.php
--- Tests/Auth/OpenID/DiffieHellman.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/DiffieHellman.php	2009-12-03 11:49:04.000000000 +0100
@@ -58,7 +58,7 @@
 
     function runTest()
     {
-        $lib =& Auth_OpenID_getMathLib();
+        $lib = Auth_OpenID_getMathLib();
         $shared = $lib->init($this->shared);
         $dh1 = new Auth_OpenID_DiffieHellman(null, null, $this->p1);
         $dh2 = new Auth_OpenID_DiffieHellman(null, null, $this->p2);
diff -NaurB Tests/Auth/OpenID/Discover_OpenID.php Tests/Auth/OpenID/Discover_OpenID.php
--- Tests/Auth/OpenID/Discover_OpenID.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/Discover_OpenID.php	2009-12-02 23:17:59.000000000 +0100
@@ -716,7 +716,7 @@
                                     Tests_Auth_OpenID_readdata('test_discover_openid_ssl.xml'))
                    );
 
-        $f =& new _FetcherWithoutSSL($d);
+        $f = new _FetcherWithoutSSL($d);
 
         $result = Auth_OpenID_discover($id_url, $f);
 
@@ -743,7 +743,7 @@
                                     Tests_Auth_OpenID_readdata('test_discover_openid_ssl.xml'))
                    );
 
-        $f =& new _FetcherWithSSL($d);
+        $f = new _FetcherWithSSL($d);
 
         $result = Auth_OpenID_discover($id_url, $f);
 
@@ -766,7 +766,7 @@
 
         $id_url = 'https://unsupported/';
 
-        $f =& new _NonFetcher();
+        $f = new _NonFetcher();
 
         $result = Auth_OpenID_discover($id_url, $f);
 
@@ -780,4 +780,4 @@
                                                  new Tests_Auth_OpenID_SSLSupport()
                                                  );
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Tests/Auth/OpenID/MemStore.php Tests/Auth/OpenID/MemStore.php
--- Tests/Auth/OpenID/MemStore.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/MemStore.php	2009-12-02 23:11:48.000000000 +0100
@@ -85,7 +85,7 @@
     function &_getServerAssocs($server_url)
     {
         if (!array_key_exists($server_url, $this->server_assocs)) {
-            $this->server_assocs[$server_url] =& new ServerAssocs();
+            $this->server_assocs[$server_url] = new ServerAssocs();
         }
 
         return $this->server_assocs[$server_url];
diff -NaurB Tests/Auth/OpenID/Message.php Tests/Auth/OpenID/Message.php
--- Tests/Auth/OpenID/Message.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/Message.php	2009-12-03 12:04:59.000000000 +0100
@@ -981,7 +981,7 @@
     function _checkForm($html, $message_, $action_url,
                         $form_tag_attrs, $submit_text)
     {
-        $parser =& Auth_Yadis_getXMLParser();
+        $parser = Auth_Yadis_getXMLParser();
 
         // Parse HTML source
         $this->assertTrue($parser->init($html, array()));
diff -NaurB Tests/Auth/OpenID/RPVerify.php Tests/Auth/OpenID/RPVerify.php
--- Tests/Auth/OpenID/RPVerify.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/RPVerify.php	2009-12-03 00:10:45.000000000 +0100
@@ -11,9 +11,6 @@
 
 require_once 'PHPUnit.php';
 
-// Because "null" cannot be passed by reference.
-$NULL_FETCHER = null;
-
 /*
  * Tests for building the discovery URL from a realm and a return_to
  * URL
@@ -69,7 +66,7 @@
     function failUnlessXRDSHasReturnURLs($data, $expected_return_urls)
     {
         $discover_object = new _MockDiscover($data);
-        $actual_return_urls = Auth_OpenID_getAllowedReturnURLs($this->disco_url, $NULL_FETCHER, array(&$discover_object, 'mockDiscover'));
+        $actual_return_urls = Auth_OpenID_getAllowedReturnURLs($this->disco_url, null, array(&$discover_object, 'mockDiscover'));
 
         $this->assertEquals($expected_return_urls, $actual_return_urls);
     }
@@ -77,7 +74,7 @@
     function failUnlessDiscoveryFailure($text)
     {
         $discover_object = new _MockDiscover($text);
-        $this->assertFalse(Auth_OpenID_getAllowedReturnURLs($this->disco_url, $NULL_FETCHER, array(&$discover_object, 'mockDiscover')));
+        $this->assertFalse(Auth_OpenID_getAllowedReturnURLs($this->disco_url, null, array(&$discover_object, 'mockDiscover')));
     }
 
     function test_empty()
@@ -246,7 +243,7 @@
     
     function test_bogusRealm()
     {
-        $this->assertFalse(Auth_OpenID_verifyReturnTo('', 'http://example.com/', $NULL_FETCHER));
+        $this->assertFalse(Auth_OpenID_verifyReturnTo('', 'http://example.com/', null));
     }
 
     function test_verifyWithDiscoveryCalled()
@@ -256,7 +253,7 @@
 
         $v = new Verifier($this, $return_to);
 
-        $this->assertTrue(Auth_OpenID_verifyReturnTo($realm, $return_to, $NULL_FETCHER, array(&$v, 'verify')));
+        $this->assertTrue(Auth_OpenID_verifyReturnTo($realm, $return_to, null, array(&$v, 'verify')));
     }
 
     function test_verifyFailWithDiscoveryCalled()
@@ -266,7 +263,7 @@
 
         $v = new Verifier($this, 'http://something-else.invalid/');
 
-        $this->assertFalse(Auth_OpenID_verifyReturnTo($realm, $return_to, $NULL_FETCHER, array(&$v, 'verify')));
+        $this->assertFalse(Auth_OpenID_verifyReturnTo($realm, $return_to, null, array(&$v, 'verify')));
     }
 
     function test_verifyFailIfDiscoveryRedirects()
@@ -276,7 +273,7 @@
 
         $v = new Verifier($this, false);
 
-        $this->assertFalse(Auth_OpenID_verifyReturnTo($realm, $return_to, $NULL_FETCHER, array(&$v, 'verify')));
+        $this->assertFalse(Auth_OpenID_verifyReturnTo($realm, $return_to, null, array(&$v, 'verify')));
     }
 }
 
@@ -296,4 +293,4 @@
 }
 
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Tests/Auth/OpenID/Server.php Tests/Auth/OpenID/Server.php
--- Tests/Auth/OpenID/Server.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/Server.php	2009-12-03 12:12:19.000000000 +0100
@@ -13,7 +13,7 @@
 
 function altModulus()
 {
-    $lib =& Auth_OpenID_getMathLib();
+    $lib = Auth_OpenID_getMathLib();
     static $num = null;
 
     if (!$num) {
@@ -521,7 +521,7 @@
 
         // test dh with non-default but valid values for dh_modulus
         // and dh_gen
-        $lib =& Auth_OpenID_getMathLib();
+        $lib = Auth_OpenID_getMathLib();
 
         $args = array(
             'openid.mode' => 'associate',
@@ -1662,7 +1662,7 @@
                                                                'HMAC-SHA1');
 
             $dh = new Auth_OpenID_DiffieHellman();
-            $ml =& Auth_OpenID_getMathLib();
+            $ml = Auth_OpenID_getMathLib();
 
             $cpub = $dh->public;
             $session = new Auth_OpenID_DiffieHellmanSHA1ServerSession(
@@ -1744,7 +1744,7 @@
         $enc_key = base64_decode(
                      $response->fields->getArg(Auth_OpenID_OPENID_NS, "enc_mac_key"));
 
-        $lib =& Auth_OpenID_getMathLib();
+        $lib = Auth_OpenID_getMathLib();
         $spub = $lib->base64ToLong($response->fields->getArg(Auth_OpenID_OPENID_NS,
                                                              "dh_server_public"));
         $secret = $consumer_dh->xorSecret($spub, $enc_key, 'Auth_OpenID_SHA256');
@@ -2149,8 +2149,8 @@
 class Tests_Auth_OpenID_Signatory extends PHPUnit_TestCase {
     function setUp()
     {
-        $this->store =& new Tests_Auth_OpenID_MemStore();
-        $this->signatory =& new Auth_OpenID_Signatory($this->store);
+        $this->store = new Tests_Auth_OpenID_MemStore();
+        $this->signatory = new Auth_OpenID_Signatory($this->store);
         $this->dumb_key = $this->signatory->dumb_key;
         $this->normal_key = $this->signatory->normal_key;
     }
diff -NaurB Tests/Auth/OpenID/SReg.php Tests/Auth/OpenID/SReg.php
--- Tests/Auth/OpenID/SReg.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/SReg.php	2009-12-03 12:15:11.000000000 +0100
@@ -211,14 +211,14 @@
 }
 
 class TestingReq extends Auth_OpenID_SRegRequest {
-    function fromOpenIDRequest(&$thing, &$test_case)
+    static function fromOpenIDRequest(&$thing, &$test_case)
     {
         __setTestCase($test_case);
         $obj = parent::fromOpenIDRequest($thing, 'TestingReq');
         return $obj;
     }
 
-    function _getSRegNS($unused)
+    static function _getSRegNS($unused)
     {
         global $__ns_sentinel;
         return $__ns_sentinel;
@@ -672,4 +672,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Tests/Auth/OpenID/StoreTest.php Tests/Auth/OpenID/StoreTest.php
--- Tests/Auth/OpenID/StoreTest.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/StoreTest.php	2009-12-03 10:07:00.000000000 +0100
@@ -437,9 +437,7 @@
     {
         // If the postgres extension isn't loaded or loadable, succeed
         // because we can't run the test.
-        if (!(extension_loaded('pgsql') ||
-              @dl('pgsql.so') ||
-              @dl('php_pgsql.dll'))) {
+        if (!extension_loaded('pgsql')) {
             print "(not testing PostGreSQL store)";
             $this->pass();
             return;
@@ -511,7 +509,7 @@
             return;
         }
 
-        $store =& new Auth_OpenID_PostgreSQLStore($db);
+        $store = new Auth_OpenID_PostgreSQLStore($db);
 
         $this->assertFalse($store->tableExists($store->nonces_table_name));
         $this->assertFalse($store->tableExists($store->associations_table_name));
@@ -557,9 +555,7 @@
     {
         // If the sqlite extension isn't loaded or loadable, succeed
         // because we can't run the test.
-        if (!(extension_loaded('sqlite') ||
-              @dl('sqlite.so') ||
-              @dl('php_sqlite.dll'))) {
+        if (!extension_loaded('sqlite')) {
             print "(not testing SQLite store)";
             $this->pass();
             return;
@@ -584,7 +580,7 @@
             $this->pass("SQLite database connection failed: " .
                         $db->getMessage());
         } else {
-            $store =& new Auth_OpenID_SQLiteStore($db);
+            $store = new Auth_OpenID_SQLiteStore($db);
             $this->assertTrue($store->createTables(), "Table creation failed");
             $this->_testStore($store);
             $this->_testNonce($store);
@@ -602,8 +598,7 @@
     {
         // If the mysql extension isn't loaded or loadable, succeed
         // because we can't run the test.
-        if (!(extension_loaded('mysql') ||
-              @dl('mysql.' . PHP_SHLIB_SUFFIX))) {
+        if (!extension_loaded('mysql')) {
             print "(not testing MySQL store)";
             $this->pass();
             return;
@@ -642,7 +637,7 @@
 
         $db->query("USE $temp_db_name");
 
-        $store =& new Auth_OpenID_MySQLStore($db);
+        $store = new Auth_OpenID_MySQLStore($db);
         $store->createTables();
         $this->_testStore($store);
         $this->_testNonce($store);
@@ -663,9 +658,7 @@
     {
         // If the memcache extension isn't loaded or loadable, succeed
         // because we can't run the test.
-        if (!(extension_loaded('memcache') ||
-              @dl('memcache.so') ||
-              @dl('php_memcache.dll'))) {
+        if (!extension_loaded('memcache')) {
             print "(skipping memcache store tests)";
             $this->pass();
             return;
diff -NaurB Tests/Auth/OpenID/VerifyDisco.php Tests/Auth/OpenID/VerifyDisco.php
--- Tests/Auth/OpenID/VerifyDisco.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/OpenID/VerifyDisco.php	2009-12-02 23:18:43.000000000 +0100
@@ -172,7 +172,7 @@
 
     function test_openid2UsePreDiscoveredWrongType()
     {
-        $this->consumer =& new Tests_Auth_OpenID_VerifyDisco_1($this->store);
+        $this->consumer = new Tests_Auth_OpenID_VerifyDisco_1($this->store);
         $this->consumer->test_case =& $this;
         $this->consumer->text = "verify failed";
 
@@ -421,4 +421,4 @@
                                              new Tests_openID1Fallback1_0(),
                                              );
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Tests/Auth/Yadis/XRDS.php Tests/Auth/Yadis/XRDS.php
--- Tests/Auth/Yadis/XRDS.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/Yadis/XRDS.php	2009-12-03 00:20:27.000000000 +0100
@@ -153,7 +153,7 @@
         $types = $s2->getTypes();
         $this->assertEquals(count($types), 1, "second type check");
 
-        function _DelegateFilter(&$service)
+        function _DelegateFilter($service)
             {
                 if ($service->getElements('openid:Delegate')) {
                     return true;
@@ -167,7 +167,7 @@
                             "_DelegateFilter check");
 
         // This filter should match all services in the document.
-        function _HasTypeAndURI(&$service)
+        function _HasTypeAndURI($service)
             {
                 if ($service->getTypes() &&
                     $service->getURIs()) {
@@ -177,7 +177,7 @@
             }
 
         // This filter should only match one.
-        function _URIMatchesSchtuff(&$service)
+        function _URIMatchesSchtuff($service)
             {
                 $uris = $service->getURIs();
 
@@ -190,7 +190,7 @@
             }
 
         // This filter should only match one.
-        function _URIMatchesMyOpenID(&$service)
+        function _URIMatchesMyOpenID($service)
             {
                 $uris = $service->getURIs();
 
@@ -246,4 +246,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Tests/Auth/Yadis/XRI.php Tests/Auth/Yadis/XRI.php
--- Tests/Auth/Yadis/XRI.php	2009-04-21 20:31:20.000000000 +0200
+++ Tests/Auth/Yadis/XRI.php	2009-12-03 00:24:43.000000000 +0100
@@ -65,7 +65,7 @@
     {
         $this->proxy_url = 'http://xri.example.com/';
         $this->fetcher = Auth_Yadis_Yadis::getHTTPFetcher();
-        $this->proxy = new Auth_Yadis_ProxyResolver($fetcher,
+        $this->proxy = new Auth_Yadis_ProxyResolver($this->fetcher,
                                                         $this->proxy_url);
         $this->servicetype = 'xri://+i-service*(+forwarding)*($v*1.0)';
         $this->servicetype_enc = 'xri%3A%2F%2F%2Bi-service%2A%28%2Bforwarding%29%2A%28%24v%2A1.0%29';
@@ -141,4 +141,4 @@
     }
 }
 
-?>
\ Pas de fin de ligne à la fin du fichier.
+?>
diff -NaurB Tests/TestDriver.php Tests/TestDriver.php
--- Tests/TestDriver.php	2009-12-02 17:44:57.000000000 +0100
+++ Tests/TestDriver.php	2009-12-03 12:19:39.000000000 +0100
@@ -13,12 +13,10 @@
  * @license http://www.apache.org/licenses/LICENSE-2.0 Apache
  */
 
-//ini_set('include_path', '.'.PATH_SEPARATOR.'..'.PATH_SEPARATOR.'/usr/share/php');
-
 require_once 'PHPUnit.php';
 require_once 'PHPUnit/GUI/HTML.php';
 
-error_reporting(E_ALL);
+error_reporting(E_ALL | E_STRICT);
 
 global $__test_errors;
 $__test_errors = array();
@@ -201,6 +199,4 @@
 
     return $result;
 }
-
-loadSuite();
 ?>
